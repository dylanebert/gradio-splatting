{"version":3,"file":"index.js","sources":["../src/math/Vector3.ts","../src/math/Quaternion.ts","../src/core/Object3D.ts","../src/math/Matrix3.ts","../src/math/Matrix4.ts","../src/cameras/Camera.ts","../src/renderers/webgl/utils/SplatTexture.ts","../src/core/Scene.ts","../src/loaders/Loader.ts","../src/loaders/processPlyBuffer.ts","../src/loaders/PLYLoader.ts","../src/renderers/webgl/passes/FadeInPass.ts","../src/renderers/WebGLRenderer.ts","../src/renderers/webgl/shaders/vertex.glsl.ts","../src/renderers/webgl/shaders/frag.glsl.ts","../src/controls/OrbitControls.ts","../src/renderers/webgl/passes/ShaderPass.ts"],"sourcesContent":["class Vector3 {\n    x: number;\n    y: number;\n    z: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    set(x: number, y: number, z: number): Vector3 {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n\n        return this;\n    }\n\n    add(v: Vector3): Vector3;\n    add(v: number): Vector3;\n    add(v: Vector3 | number): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x + v, this.y + v, this.z + v);\n        } else {\n            return new Vector3(this.x + v.x, this.y + v.y, this.z + v.z);\n        }\n    }\n\n    subtract(v: Vector3): Vector3;\n    subtract(v: number): Vector3;\n    subtract(v: Vector3 | number): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x - v, this.y - v, this.z - v);\n        } else {\n            return new Vector3(this.x - v.x, this.y - v.y, this.z - v.z);\n        }\n    }\n\n    multiply(v: Vector3): Vector3;\n    multiply(v: number): Vector3;\n    multiply(v: Vector3 | number): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x * v, this.y * v, this.z * v);\n        } else {\n            return new Vector3(this.x * v.x, this.y * v.y, this.z * v.z);\n        }\n    }\n\n    lerp(v: Vector3, t: number): Vector3 {\n        return new Vector3(this.x + (v.x - this.x) * t, this.y + (v.y - this.y) * t, this.z + (v.z - this.z) * t);\n    }\n\n    length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    normalize(): Vector3 {\n        const length = this.length();\n        this.x /= length;\n        this.y /= length;\n        this.z /= length;\n\n        return this;\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z];\n    }\n\n    clone(): Vector3 {\n        return new Vector3(this.x, this.y, this.z);\n    }\n}\n\nexport { Vector3 };\n","import { Matrix3 } from \"./Matrix3\";\nimport { Vector3 } from \"./Vector3\";\n\nclass Quaternion {\n    x: number;\n    y: number;\n    z: number;\n    w: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n\n        this.normalize();\n    }\n\n    set(x: number, y: number, z: number, w: number): Quaternion {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n\n        this.normalize();\n\n        return this;\n    }\n\n    normalize(): Quaternion {\n        const l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n        this.x /= l;\n        this.y /= l;\n        this.z /= l;\n        this.w /= l;\n\n        return this;\n    }\n\n    multiply(q: Quaternion): Quaternion {\n        const w1 = this.w,\n            x1 = this.x,\n            y1 = this.y,\n            z1 = this.z;\n        const w2 = q.w,\n            x2 = q.x,\n            y2 = q.y,\n            z2 = q.z;\n\n        return new Quaternion(\n            w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2,\n            w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2,\n            w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2,\n            w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2,\n        );\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z, this.w];\n    }\n\n    clone(): Quaternion {\n        return new Quaternion(this.x, this.y, this.z, this.w);\n    }\n\n    static FromEuler(e: Vector3): Quaternion {\n        const halfX = e.x / 2;\n        const halfY = e.y / 2;\n        const halfZ = e.z / 2;\n        const cy = Math.cos(halfY);\n        const sy = Math.sin(halfY);\n        const cp = Math.cos(halfX);\n        const sp = Math.sin(halfX);\n        const cz = Math.cos(halfZ);\n        const sz = Math.sin(halfZ);\n\n        const q = new Quaternion(\n            cy * sp * cz + sy * cp * sz,\n            sy * cp * cz - cy * sp * sz,\n            cy * cp * sz - sy * sp * cz,\n            cy * cp * cz + sy * sp * sz,\n        );\n        return q;\n    }\n\n    toEuler(): Vector3 {\n        const e = new Vector3();\n\n        const sinr_cosp = 2 * (this.w * this.x + this.y * this.z);\n        const cosr_cosp = 1 - 2 * (this.x * this.x + this.y * this.y);\n        e.x = Math.atan2(sinr_cosp, cosr_cosp);\n\n        const sinp = 2 * (this.w * this.y - this.z * this.x);\n        if (Math.abs(sinp) >= 1) {\n            e.y = (Math.sign(sinp) * Math.PI) / 2;\n        } else {\n            e.y = Math.asin(sinp);\n        }\n\n        const siny_cosp = 2 * (this.w * this.z + this.x * this.y);\n        const cosy_cosp = 1 - 2 * (this.y * this.y + this.z * this.z);\n        e.z = Math.atan2(siny_cosp, cosy_cosp);\n\n        return e;\n    }\n\n    static FromMatrix3(matrix: Matrix3): Quaternion {\n        const m = matrix.buffer;\n        const q = new Quaternion();\n        const trace = m[0] + m[4] + m[8];\n        if (trace > 0) {\n            const s = 0.5 / Math.sqrt(trace + 1.0);\n            q.w = 0.25 / s;\n            q.x = (m[7] - m[5]) * s;\n            q.y = (m[2] - m[6]) * s;\n            q.z = (m[3] - m[1]) * s;\n        } else if (m[0] > m[4] && m[0] > m[8]) {\n            const s = 2.0 * Math.sqrt(1.0 + m[0] - m[4] - m[8]);\n            q.w = (m[7] - m[5]) / s;\n            q.x = 0.25 * s;\n            q.y = (m[1] + m[3]) / s;\n            q.z = (m[2] + m[6]) / s;\n        } else if (m[4] > m[8]) {\n            const s = 2.0 * Math.sqrt(1.0 + m[4] - m[0] - m[8]);\n            q.w = (m[2] - m[6]) / s;\n            q.x = (m[1] + m[3]) / s;\n            q.y = 0.25 * s;\n            q.z = (m[5] + m[7]) / s;\n        } else {\n            const s = 2.0 * Math.sqrt(1.0 + m[8] - m[0] - m[4]);\n            q.w = (m[3] - m[1]) / s;\n            q.x = (m[2] + m[6]) / s;\n            q.y = (m[5] + m[7]) / s;\n            q.z = 0.25 * s;\n        }\n        return q;\n    }\n}\n\nexport { Quaternion };\n","import { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\n\nclass Object3D {\n    position: Vector3;\n    rotation: Quaternion;\n\n    constructor() {\n        this.position = new Vector3();\n        this.rotation = new Quaternion();\n    }\n}\n\nexport { Object3D };\n","import { Quaternion } from \"./Quaternion\";\nimport type { Vector3 } from \"./Vector3\";\n\nclass Matrix3 {\n    buffer: number[];\n\n    // prettier-ignore\n    constructor(n11: number = 1, n12: number = 0, n13: number = 0,\n                n21: number = 0, n22: number = 1, n23: number = 0,\n                n31: number = 0, n32: number = 0, n33: number = 1) {\n        this.buffer = new Array(9);\n\n        this.set(\n            n11, n12, n13,\n            n21, n22, n23,\n            n31, n32, n33\n        );\n    }\n\n    // prettier-ignore\n    set(n11: number, n12: number, n13: number,\n        n21: number, n22: number, n23: number,\n        n31: number, n32: number, n33: number): Matrix3 {\n        const e = this.buffer;\n\n        e[0] = n11; e[1] = n12; e[2] = n13;\n        e[3] = n21; e[4] = n22; e[5] = n23;\n        e[6] = n31; e[7] = n32; e[8] = n33;\n\n        return this;\n    }\n\n    multiply(m: Matrix3): Matrix3 {\n        const a = this.buffer;\n        const b = m.buffer;\n        return new Matrix3(\n            b[0] * a[0] + b[3] * a[1] + b[6] * a[2],\n            b[1] * a[0] + b[4] * a[1] + b[7] * a[2],\n            b[2] * a[0] + b[5] * a[1] + b[8] * a[2],\n            b[0] * a[3] + b[3] * a[4] + b[6] * a[5],\n            b[1] * a[3] + b[4] * a[4] + b[7] * a[5],\n            b[2] * a[3] + b[5] * a[4] + b[8] * a[5],\n            b[0] * a[6] + b[3] * a[7] + b[6] * a[8],\n            b[1] * a[6] + b[4] * a[7] + b[7] * a[8],\n            b[2] * a[6] + b[5] * a[7] + b[8] * a[8],\n        );\n    }\n\n    clone(): Matrix3 {\n        const e = this.buffer;\n        // prettier-ignore\n        return new Matrix3(\n            e[0], e[1], e[2],\n            e[3], e[4], e[5],\n            e[6], e[7], e[8]\n        );\n    }\n\n    static RotationFromQuaternion(q: Quaternion): Matrix3 {\n        const matrix = new Matrix3(\n            1 - 2 * q.y * q.y - 2 * q.z * q.z,\n            2 * q.x * q.y - 2 * q.z * q.w,\n            2 * q.x * q.z + 2 * q.y * q.w,\n            2 * q.x * q.y + 2 * q.z * q.w,\n            1 - 2 * q.x * q.x - 2 * q.z * q.z,\n            2 * q.y * q.z - 2 * q.x * q.w,\n            2 * q.x * q.z - 2 * q.y * q.w,\n            2 * q.y * q.z + 2 * q.x * q.w,\n            1 - 2 * q.x * q.x - 2 * q.y * q.y,\n        );\n        return matrix;\n    }\n\n    static RotationFromEuler(m: Vector3): Matrix3 {\n        const cx = Math.cos(m.x);\n        const sx = Math.sin(m.x);\n        const cy = Math.cos(m.y);\n        const sy = Math.sin(m.y);\n        const cz = Math.cos(m.z);\n        const sz = Math.sin(m.z);\n\n        const rotationMatrix = [\n            cy * cz + sy * sx * sz,\n            -cy * sz + sy * sx * cz,\n            sy * cx,\n            cx * sz,\n            cx * cz,\n            -sx,\n            -sy * cz + cy * sx * sz,\n            sy * sz + cy * sx * cz,\n            cy * cx,\n        ];\n\n        return new Matrix3(...rotationMatrix);\n    }\n}\n\nexport { Matrix3 };\n","class Matrix4 {\n    buffer: number[];\n\n    // prettier-ignore\n    constructor(n11: number = 1, n12: number = 0, n13: number = 0, n14: number = 0, \n                n21: number = 0, n22: number = 1, n23: number = 0, n24: number = 0, \n                n31: number = 0, n32: number = 0, n33: number = 1, n34: number = 0, \n                n41: number = 0, n42: number = 0, n43: number = 0, n44: number = 1) {\n        this.buffer = new Array(16);\n\n        this.set(\n            n11, n12, n13, n14, \n            n21, n22, n23, n24, \n            n31, n32, n33, n34, \n            n41, n42, n43, n44\n        );\n    }\n\n    // prettier-ignore\n    set(n11: number, n12: number, n13: number, n14: number,\n        n21: number, n22: number, n23: number, n24: number,\n        n31: number, n32: number, n33: number, n34: number,\n        n41: number, n42: number, n43: number, n44: number) : Matrix4 {\n        const e = this.buffer;\n\n        e[0] = n11; e[1] = n12; e[2] = n13; e[3] = n14;\n        e[4] = n21; e[5] = n22; e[6] = n23; e[7] = n24;\n        e[8] = n31; e[9] = n32; e[10] = n33; e[11] = n34;\n        e[12] = n41; e[13] = n42; e[14] = n43; e[15] = n44;\n\n        return this;\n    }\n\n    multiply(m: Matrix4): Matrix4 {\n        const a = this.buffer;\n        const b = m.buffer;\n        return new Matrix4(\n            b[0] * a[0] + b[1] * a[4] + b[2] * a[8] + b[3] * a[12],\n            b[0] * a[1] + b[1] * a[5] + b[2] * a[9] + b[3] * a[13],\n            b[0] * a[2] + b[1] * a[6] + b[2] * a[10] + b[3] * a[14],\n            b[0] * a[3] + b[1] * a[7] + b[2] * a[11] + b[3] * a[15],\n            b[4] * a[0] + b[5] * a[4] + b[6] * a[8] + b[7] * a[12],\n            b[4] * a[1] + b[5] * a[5] + b[6] * a[9] + b[7] * a[13],\n            b[4] * a[2] + b[5] * a[6] + b[6] * a[10] + b[7] * a[14],\n            b[4] * a[3] + b[5] * a[7] + b[6] * a[11] + b[7] * a[15],\n            b[8] * a[0] + b[9] * a[4] + b[10] * a[8] + b[11] * a[12],\n            b[8] * a[1] + b[9] * a[5] + b[10] * a[9] + b[11] * a[13],\n            b[8] * a[2] + b[9] * a[6] + b[10] * a[10] + b[11] * a[14],\n            b[8] * a[3] + b[9] * a[7] + b[10] * a[11] + b[11] * a[15],\n            b[12] * a[0] + b[13] * a[4] + b[14] * a[8] + b[15] * a[12],\n            b[12] * a[1] + b[13] * a[5] + b[14] * a[9] + b[15] * a[13],\n            b[12] * a[2] + b[13] * a[6] + b[14] * a[10] + b[15] * a[14],\n            b[12] * a[3] + b[13] * a[7] + b[14] * a[11] + b[15] * a[15],\n        );\n    }\n\n    clone(): Matrix4 {\n        const e = this.buffer;\n        // prettier-ignore\n        return new Matrix4(\n            e[0], e[1], e[2], e[3], \n            e[4], e[5], e[6], e[7], \n            e[8], e[9], e[10], e[11], \n            e[12], e[13], e[14], e[15]\n        );\n    }\n}\n\nexport { Matrix4 };\n","import { Object3D } from \"../core/Object3D\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass Camera extends Object3D {\n    fx: number;\n    fy: number;\n\n    near: number;\n    far: number;\n\n    projectionMatrix: Matrix4;\n    viewMatrix: Matrix4;\n    viewProj: Matrix4;\n\n    update: (width: number, height: number) => void;\n\n    constructor(\n        position = new Vector3(0, 0, -5),\n        rotation = new Quaternion(),\n        fx = 1132,\n        fy = 1132,\n        near = 0.1,\n        far = 100,\n    ) {\n        super();\n\n        const getViewMatrix = (): Matrix4 => {\n            const R = Matrix3.RotationFromQuaternion(this.rotation).buffer;\n            const t = this.position.flat();\n            const camToWorld = [\n                [R[0], R[1], R[2], 0],\n                [R[3], R[4], R[5], 0],\n                [R[6], R[7], R[8], 0],\n                [\n                    -t[0] * R[0] - t[1] * R[3] - t[2] * R[6],\n                    -t[0] * R[1] - t[1] * R[4] - t[2] * R[7],\n                    -t[0] * R[2] - t[1] * R[5] - t[2] * R[8],\n                    1,\n                ],\n            ].flat();\n            return new Matrix4(...camToWorld);\n        };\n\n        this.position = position;\n        this.rotation = rotation;\n        this.fx = fx;\n        this.fy = fy;\n        this.near = near;\n        this.far = far;\n        this.projectionMatrix = new Matrix4();\n        this.viewMatrix = new Matrix4();\n        this.viewProj = new Matrix4();\n\n        this.update = (width: number, height: number) => {\n            // prettier-ignore\n            this.projectionMatrix.set(\n                2 * this.fx / width, 0, 0, 0,\n                0, -2 * this.fy / height, 0, 0,\n                0, 0, this.far / (this.far - this.near), 1,\n                0, 0, -(this.far * this.near) / (this.far - this.near), 0\n                );\n            this.viewMatrix = getViewMatrix();\n            this.viewProj = this.projectionMatrix.multiply(this.viewMatrix);\n        };\n    }\n}\n\nexport { Camera };\n","/*\n    from https://github.com/antimatter15/splat/blob/main/main.js\n*/\n\nimport { Scene } from \"../../../core/Scene\";\n\nclass SplatTexture {\n    data: Uint32Array;\n    width: number;\n    height: number;\n\n    constructor(data: Uint32Array, width: number, height: number) {\n        this.data = data;\n        this.width = width;\n        this.height = height;\n    }\n\n    static FromScene(scene: Scene): SplatTexture {\n        const _floatView: Float32Array = new Float32Array(1);\n        const _int32View: Int32Array = new Int32Array(_floatView.buffer);\n\n        const floatToHalf = (float: number) => {\n            _floatView[0] = float;\n            const f = _int32View[0];\n\n            const sign = (f >> 31) & 0x0001;\n            const exp = (f >> 23) & 0x00ff;\n            let frac = f & 0x007fffff;\n\n            let newExp;\n            if (exp == 0) {\n                newExp = 0;\n            } else if (exp < 113) {\n                newExp = 0;\n                frac |= 0x00800000;\n                frac = frac >> (113 - exp);\n                if (frac & 0x01000000) {\n                    newExp = 1;\n                    frac = 0;\n                }\n            } else if (exp < 142) {\n                newExp = exp - 112;\n            } else {\n                newExp = 31;\n                frac = 0;\n            }\n\n            return (sign << 15) | (newExp << 10) | (frac >> 13);\n        };\n\n        const packHalf2x16 = (x: number, y: number) => {\n            return (floatToHalf(x) | (floatToHalf(y) << 16)) >>> 0;\n        };\n\n        const texwidth = 2048;\n        const texheight = Math.ceil((2 * scene.vertexCount) / texwidth);\n        const texdata = new Uint32Array(texwidth * texheight * 4);\n        const texdata_c = new Uint8Array(texdata.buffer);\n        const texdata_f = new Float32Array(texdata.buffer);\n\n        const f_buffer = new Float32Array(scene.data.buffer);\n        const u_buffer = new Uint8Array(scene.data.buffer);\n\n        // Here we convert from a .splat file buffer into a texture\n        // With a little bit more foresight perhaps this texture file\n        // should have been the native format as it'd be very easy to\n        // load it into webgl.\n        for (let i = 0; i < scene.vertexCount; i++) {\n            // x, y, z\n            texdata_f[8 * i + 0] = f_buffer[8 * i + 0];\n            texdata_f[8 * i + 1] = f_buffer[8 * i + 1];\n            texdata_f[8 * i + 2] = f_buffer[8 * i + 2];\n\n            // r, g, b, a\n            texdata_c[4 * (8 * i + 7) + 0] = u_buffer[32 * i + 24 + 0];\n            texdata_c[4 * (8 * i + 7) + 1] = u_buffer[32 * i + 24 + 1];\n            texdata_c[4 * (8 * i + 7) + 2] = u_buffer[32 * i + 24 + 2];\n            texdata_c[4 * (8 * i + 7) + 3] = u_buffer[32 * i + 24 + 3];\n\n            // quaternions\n            const scale = [f_buffer[8 * i + 3 + 0], f_buffer[8 * i + 3 + 1], f_buffer[8 * i + 3 + 2]];\n            const rot = [\n                (u_buffer[32 * i + 28 + 0] - 128) / 128,\n                (u_buffer[32 * i + 28 + 1] - 128) / 128,\n                (u_buffer[32 * i + 28 + 2] - 128) / 128,\n                (u_buffer[32 * i + 28 + 3] - 128) / 128,\n            ];\n\n            // Compute the matrix product of S and R (M = S * R)\n            const M = [\n                1.0 - 2.0 * (rot[2] * rot[2] + rot[3] * rot[3]),\n                2.0 * (rot[1] * rot[2] + rot[0] * rot[3]),\n                2.0 * (rot[1] * rot[3] - rot[0] * rot[2]),\n\n                2.0 * (rot[1] * rot[2] - rot[0] * rot[3]),\n                1.0 - 2.0 * (rot[1] * rot[1] + rot[3] * rot[3]),\n                2.0 * (rot[2] * rot[3] + rot[0] * rot[1]),\n\n                2.0 * (rot[1] * rot[3] + rot[0] * rot[2]),\n                2.0 * (rot[2] * rot[3] - rot[0] * rot[1]),\n                1.0 - 2.0 * (rot[1] * rot[1] + rot[2] * rot[2]),\n            ].map((k, i) => k * scale[Math.floor(i / 3)]);\n\n            const sigma = [\n                M[0] * M[0] + M[3] * M[3] + M[6] * M[6],\n                M[0] * M[1] + M[3] * M[4] + M[6] * M[7],\n                M[0] * M[2] + M[3] * M[5] + M[6] * M[8],\n                M[1] * M[1] + M[4] * M[4] + M[7] * M[7],\n                M[1] * M[2] + M[4] * M[5] + M[7] * M[8],\n                M[2] * M[2] + M[5] * M[5] + M[8] * M[8],\n            ];\n\n            texdata[8 * i + 4] = packHalf2x16(4 * sigma[0], 4 * sigma[1]);\n            texdata[8 * i + 5] = packHalf2x16(4 * sigma[2], 4 * sigma[3]);\n            texdata[8 * i + 6] = packHalf2x16(4 * sigma[4], 4 * sigma[5]);\n        }\n\n        return new SplatTexture(texdata, texwidth, texheight);\n    }\n}\n\nexport { SplatTexture };\n","import { Matrix3 } from \"../math/Matrix3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { SplatTexture } from \"../renderers/webgl/utils/SplatTexture\";\nimport { Object3D } from \"./Object3D\";\n\nclass Scene extends Object3D {\n    data: Uint8Array;\n\n    vertexCount: number;\n\n    f_buffer: Float32Array;\n    u_buffer: Uint8Array;\n\n    tex: SplatTexture;\n\n    dirty: boolean;\n\n    constructor() {\n        super();\n\n        this.data = new Uint8Array(0);\n        this.vertexCount = 0;\n\n        this.f_buffer = new Float32Array(0);\n        this.u_buffer = new Uint8Array(0);\n\n        this.tex = new SplatTexture(new Uint32Array(0), 0, 0);\n\n        this.dirty = true;\n    }\n\n    updateTex() {\n        this.tex = SplatTexture.FromScene(this);\n    }\n\n    setData(data: Uint8Array): void {\n        this.data = data;\n\n        const rowLength = 3 * 4 + 3 * 4 + 4 + 4;\n        this.vertexCount = this.data.length / rowLength;\n\n        this.f_buffer = new Float32Array(this.data.buffer);\n        this.u_buffer = new Uint8Array(this.data.buffer);\n\n        this.dirty = true;\n    }\n\n    translate(translation: Vector3) {\n        for (let i = 0; i < this.vertexCount; i++) {\n            const x = this.f_buffer[8 * i + 0];\n            const y = this.f_buffer[8 * i + 1];\n            const z = this.f_buffer[8 * i + 2];\n\n            this.f_buffer[8 * i + 0] = x + translation.x;\n            this.f_buffer[8 * i + 1] = y + translation.y;\n            this.f_buffer[8 * i + 2] = z + translation.z;\n        }\n\n        this.dirty = true;\n    }\n\n    rotate(rotation: Quaternion) {\n        const R = Matrix3.RotationFromQuaternion(rotation).buffer;\n\n        for (let i = 0; i < this.vertexCount; i++) {\n            const x = this.f_buffer[8 * i + 0];\n            const y = this.f_buffer[8 * i + 1];\n            const z = this.f_buffer[8 * i + 2];\n\n            this.f_buffer[8 * i + 0] = R[0] * x + R[1] * y + R[2] * z;\n            this.f_buffer[8 * i + 1] = R[3] * x + R[4] * y + R[5] * z;\n            this.f_buffer[8 * i + 2] = R[6] * x + R[7] * y + R[8] * z;\n\n            const currentRotation = new Quaternion(\n                (this.u_buffer[32 * i + 28 + 1] - 128) / 128,\n                (this.u_buffer[32 * i + 28 + 2] - 128) / 128,\n                (this.u_buffer[32 * i + 28 + 3] - 128) / 128,\n                (this.u_buffer[32 * i + 28 + 0] - 128) / 128,\n            );\n\n            const newRot = rotation.multiply(currentRotation);\n            this.u_buffer[32 * i + 28 + 1] = Math.round((newRot.x * 128 + 128) % 256);\n            this.u_buffer[32 * i + 28 + 2] = Math.round((newRot.y * 128 + 128) % 256);\n            this.u_buffer[32 * i + 28 + 3] = Math.round((newRot.z * 128 + 128) % 256);\n            this.u_buffer[32 * i + 28 + 0] = Math.round((newRot.w * 128 + 128) % 256);\n        }\n\n        this.dirty = true;\n    }\n}\n\nexport { Scene };\n","import type { Scene } from \"../core/Scene\";\n\nclass Loader {\n    static async LoadAsync(url: string, scene: Scene, onProgress?: (progress: number) => void): Promise<void> {\n        const req = await fetch(url, {\n            mode: \"cors\",\n            credentials: \"omit\",\n        });\n\n        if (req.status != 200) {\n            throw new Error(req.status + \" Unable to load \" + req.url);\n        }\n\n        const reader = req.body!.getReader();\n        const contentLength = parseInt(req.headers.get(\"content-length\") as string);\n        const data = new Uint8Array(contentLength);\n\n        let bytesRead = 0;\n\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const { done, value } = await reader.read();\n            if (done) break;\n\n            data.set(value, bytesRead);\n            bytesRead += value.length;\n\n            onProgress?.(bytesRead / contentLength);\n        }\n\n        scene.setData(data);\n    }\n\n    static async LoadFromFileAsync(file: File, scene: Scene, onProgress?: (progress: number) => void): Promise<void> {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const data = new Uint8Array(e.target!.result as ArrayBuffer);\n            scene.setData(data);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n    }\n}\n\nexport { Loader };\n","/*\n    from https://github.com/antimatter15/splat/blob/main/main.js\n*/\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nexport function processPlyBuffer(inputBuffer: ArrayBuffer, onProgress?: (progress: number) => void) {\n    const ubuf = new Uint8Array(inputBuffer);\n    const header = new TextDecoder().decode(ubuf.slice(0, 1024 * 10));\n    const header_end = \"end_header\\n\";\n    const header_end_index = header.indexOf(header_end);\n    if (header_end_index < 0) throw new Error(\"Unable to read .ply file header\");\n    const vertexCount = parseInt(/element vertex (\\d+)\\n/.exec(header)![1]);\n    let row_offset = 0;\n    const offsets = {};\n    const types = {};\n    const TYPE_MAP = {\n        double: \"getFloat64\",\n        int: \"getInt32\",\n        uint: \"getUint32\",\n        float: \"getFloat32\",\n        short: \"getInt16\",\n        ushort: \"getUint16\",\n        uchar: \"getUint8\",\n    };\n    for (const prop of header\n        .slice(0, header_end_index)\n        .split(\"\\n\")\n        .filter((k) => k.startsWith(\"property \"))) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const [_p, type, name] = prop.split(\" \");\n        const arrayType = TYPE_MAP[type] || \"getInt8\";\n        types[name] = arrayType;\n        offsets[name] = row_offset;\n        row_offset += parseInt(arrayType.replace(/[^\\d]/g, \"\")) / 8;\n    }\n\n    const dataView = new DataView(inputBuffer, header_end_index + header_end.length);\n    let row = 0;\n    const attrs = new Proxy(\n        {},\n        {\n            get(_target, prop) {\n                if (!types[prop]) throw new Error(prop + \" not found\");\n                return dataView[types[prop]](row * row_offset + offsets[prop], true);\n            },\n        },\n    );\n\n    const rowLength = 3 * 4 + 3 * 4 + 4 + 4;\n    const buffer = new ArrayBuffer(rowLength * vertexCount);\n\n    for (let j = 0; j < vertexCount; j++) {\n        row = j;\n\n        const position = new Float32Array(buffer, j * rowLength, 3);\n        const scales = new Float32Array(buffer, j * rowLength + 4 * 3, 3);\n        const rgba = new Uint8ClampedArray(buffer, j * rowLength + 4 * 3 + 4 * 3, 4);\n        const rot = new Uint8ClampedArray(buffer, j * rowLength + 4 * 3 + 4 * 3 + 4, 4);\n\n        if (types[\"scale_0\"]) {\n            const qlen = Math.sqrt(attrs.rot_0 ** 2 + attrs.rot_1 ** 2 + attrs.rot_2 ** 2 + attrs.rot_3 ** 2);\n\n            rot[0] = (attrs.rot_0 / qlen) * 128 + 128;\n            rot[1] = (attrs.rot_1 / qlen) * 128 + 128;\n            rot[2] = (attrs.rot_2 / qlen) * 128 + 128;\n            rot[3] = (attrs.rot_3 / qlen) * 128 + 128;\n\n            scales[0] = Math.exp(attrs.scale_0);\n            scales[1] = Math.exp(attrs.scale_1);\n            scales[2] = Math.exp(attrs.scale_2);\n        } else {\n            scales[0] = 0.01;\n            scales[1] = 0.01;\n            scales[2] = 0.01;\n\n            rot[0] = 255;\n            rot[1] = 0;\n            rot[2] = 0;\n            rot[3] = 0;\n        }\n\n        position[0] = attrs.x;\n        position[1] = attrs.y;\n        position[2] = attrs.z;\n\n        if (types[\"f_dc_0\"]) {\n            const SH_C0 = 0.28209479177387814;\n            rgba[0] = (0.5 + SH_C0 * attrs.f_dc_0) * 255;\n            rgba[1] = (0.5 + SH_C0 * attrs.f_dc_1) * 255;\n            rgba[2] = (0.5 + SH_C0 * attrs.f_dc_2) * 255;\n        } else {\n            rgba[0] = attrs.red;\n            rgba[1] = attrs.green;\n            rgba[2] = attrs.blue;\n        }\n        if (types[\"opacity\"]) {\n            rgba[3] = (1 / (1 + Math.exp(-attrs.opacity))) * 255;\n        } else {\n            rgba[3] = 255;\n        }\n\n        if (j % 1000 === 0) onProgress?.(j / vertexCount);\n    }\n    return buffer;\n}\n","import type { Scene } from \"../core/Scene\";\nimport { processPlyBuffer } from \"./processPlyBuffer\";\n\nclass PLYLoader {\n    static async LoadAsync(url: string, scene: Scene, onProgress?: (progress: number) => void): Promise<void> {\n        const req = await fetch(url, {\n            mode: \"cors\",\n            credentials: \"omit\",\n        });\n\n        if (req.status != 200) {\n            throw new Error(req.status + \" Unable to load \" + req.url);\n        }\n\n        const reader = req.body!.getReader();\n        const contentLength = parseInt(req.headers.get(\"content-length\") as string);\n        const plyData = new Uint8Array(contentLength);\n\n        let bytesRead = 0;\n\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const { done, value } = await reader.read();\n            if (done) break;\n\n            plyData.set(value, bytesRead);\n            bytesRead += value.length;\n\n            onProgress?.((0.5 * bytesRead) / contentLength);\n        }\n\n        if (plyData[0] !== 112 || plyData[1] !== 108 || plyData[2] !== 121 || plyData[3] !== 10) {\n            throw new Error(\"Invalid PLY file\");\n        }\n\n        const data = new Uint8Array(\n            processPlyBuffer(plyData.buffer, (progress) => {\n                onProgress?.(0.5 + 0.5 * progress);\n            }),\n        );\n        scene.setData(data);\n    }\n\n    static async LoadFromFileAsync(file: File, scene: Scene, onProgress?: (progress: number) => void): Promise<void> {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const data = new Uint8Array(\n                processPlyBuffer(e.target!.result as ArrayBuffer, (progress) => {\n                    onProgress?.(0.5 + 0.5 * progress);\n                }),\n            );\n            scene.setData(data);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.((0.5 * e.loaded) / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n    }\n}\n\nexport { PLYLoader };\n","import { WebGLRenderer } from \"../../WebGLRenderer\";\nimport { ShaderPass } from \"./ShaderPass\";\n\nclass FadeInPass implements ShaderPass {\n    init: (renderer: WebGLRenderer, program: WebGLProgram) => void;\n    render: () => void;\n\n    constructor(speed: number = 1.0) {\n        let value = 0.0;\n        let active = false;\n\n        let activeRenderer: WebGLRenderer;\n        let u_useDepthFade: WebGLUniformLocation;\n        let u_depthFade: WebGLUniformLocation;\n\n        this.init = (renderer: WebGLRenderer, program: WebGLProgram) => {\n            value = 0;\n            active = true;\n            activeRenderer = renderer;\n\n            u_useDepthFade = renderer.gl.getUniformLocation(program, \"u_useDepthFade\") as WebGLUniformLocation;\n            activeRenderer.gl.uniform1i(u_useDepthFade, 1);\n\n            u_depthFade = renderer.gl.getUniformLocation(program, \"u_depthFade\") as WebGLUniformLocation;\n            activeRenderer.gl.uniform1f(u_depthFade, value);\n        };\n\n        this.render = () => {\n            if (!active) return;\n            value = Math.min(value + speed * 0.01, 1.0);\n            if (value >= 1.0) {\n                active = false;\n                activeRenderer.gl.uniform1i(u_useDepthFade, 0);\n            }\n            activeRenderer.gl.uniform1f(u_depthFade, value);\n        };\n    }\n}\n\nexport { FadeInPass };\n","import type { Camera } from \"../cameras/Camera\";\nimport type { Scene } from \"../core/Scene\";\n\nimport SortWorker from \"web-worker:./webgl/utils/Worker.ts\";\n\nimport { vertex } from \"./webgl/shaders/vertex.glsl\";\nimport { frag } from \"./webgl/shaders/frag.glsl\";\nimport { ShaderPass } from \"./webgl/passes/ShaderPass\";\nimport { FadeInPass } from \"./webgl/passes/FadeInPass\";\n\nexport class WebGLRenderer {\n    domElement: HTMLCanvasElement;\n    gl: WebGL2RenderingContext;\n\n    resize: () => void;\n    setSize: (width: number, height: number) => void;\n    render: (scene: Scene, camera: Camera) => void;\n    dispose: () => void;\n\n    constructor(optionalCanvas: HTMLCanvasElement | null = null, optionalShaderPasses: ShaderPass[] | null = null) {\n        const canvas: HTMLCanvasElement = optionalCanvas || document.createElement(\"canvas\");\n        if (!optionalCanvas) {\n            canvas.style.display = \"block\";\n            canvas.style.boxSizing = \"border-box\";\n            canvas.style.width = \"100%\";\n            canvas.style.height = \"100%\";\n            canvas.style.margin = \"0\";\n            canvas.style.padding = \"0\";\n            document.body.appendChild(canvas);\n        }\n        canvas.style.background = \"#000\";\n        this.domElement = canvas;\n\n        const gl = canvas.getContext(\"webgl2\", { antialias: false }) as WebGL2RenderingContext;\n        this.gl = gl;\n\n        const shaderPasses = optionalShaderPasses || [];\n        if (!optionalShaderPasses) {\n            shaderPasses.push(new FadeInPass());\n        }\n\n        let activeScene: Scene;\n        let activeCamera: Camera;\n\n        let worker: Worker;\n\n        let vertexShader: WebGLShader;\n        let fragmentShader: WebGLShader;\n        let program: WebGLProgram;\n\n        let u_projection: WebGLUniformLocation;\n        let u_viewport: WebGLUniformLocation;\n        let u_focal: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_texture: WebGLUniformLocation;\n\n        let positionAttribute: number;\n        let indexAttribute: number;\n\n        let vertexBuffer: WebGLBuffer;\n        let centerBuffer: WebGLBuffer;\n        let colorBuffer: WebGLBuffer;\n        let covABuffer: WebGLBuffer;\n        let covBBuffer: WebGLBuffer;\n\n        let initialized = false;\n\n        this.resize = () => {\n            const width = canvas.clientWidth;\n            const height = canvas.clientHeight;\n            if (canvas.width !== width || canvas.height !== height) {\n                this.setSize(width, height);\n            }\n        };\n\n        this.setSize = (width: number, height: number) => {\n            canvas.width = width;\n            canvas.height = height;\n\n            if (!activeCamera) return;\n\n            gl.viewport(0, 0, canvas!.width, canvas.height);\n            activeCamera.update(canvas.width, canvas.height);\n\n            u_projection = gl.getUniformLocation(program, \"projection\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_projection, false, activeCamera.projectionMatrix.buffer);\n\n            u_viewport = gl.getUniformLocation(program, \"viewport\") as WebGLUniformLocation;\n            gl.uniform2fv(u_viewport, new Float32Array([canvas.width, canvas.height]));\n        };\n\n        const initWebGL = () => {\n            worker = new SortWorker();\n            worker.postMessage({ scene: activeScene });\n\n            gl.viewport(0, 0, canvas.width, canvas.height);\n\n            vertexShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\n            gl.shaderSource(vertexShader, vertex);\n            gl.compileShader(vertexShader);\n            if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n                console.error(gl.getShaderInfoLog(vertexShader));\n            }\n\n            fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\n            gl.shaderSource(fragmentShader, frag);\n            gl.compileShader(fragmentShader);\n            if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n                console.error(gl.getShaderInfoLog(fragmentShader));\n            }\n\n            program = gl.createProgram() as WebGLProgram;\n            gl.attachShader(program, vertexShader);\n            gl.attachShader(program, fragmentShader);\n            gl.linkProgram(program);\n            gl.useProgram(program);\n            if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n                console.error(gl.getProgramInfoLog(program));\n            }\n\n            gl.disable(gl.DEPTH_TEST);\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(gl.ONE_MINUS_DST_ALPHA, gl.ONE, gl.ONE_MINUS_DST_ALPHA, gl.ONE);\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n\n            activeCamera.update(canvas.width, canvas.height);\n\n            u_projection = gl.getUniformLocation(program, \"projection\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_projection, false, activeCamera.projectionMatrix.buffer);\n\n            u_viewport = gl.getUniformLocation(program, \"viewport\") as WebGLUniformLocation;\n            gl.uniform2fv(u_viewport, new Float32Array([canvas.width, canvas.height]));\n\n            u_focal = gl.getUniformLocation(program, \"focal\") as WebGLUniformLocation;\n            gl.uniform2fv(u_focal, new Float32Array([activeCamera.fx, activeCamera.fy]));\n\n            u_view = gl.getUniformLocation(program, \"view\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_view, false, activeCamera.viewMatrix.buffer);\n\n            const triangleVertices = new Float32Array([-2, -2, 2, -2, 2, 2, -2, 2]);\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, triangleVertices, gl.STATIC_DRAW);\n\n            positionAttribute = gl.getAttribLocation(program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            const texture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n\n            u_texture = gl.getUniformLocation(program, \"u_texture\") as WebGLUniformLocation;\n            gl.uniform1i(u_texture, 0);\n\n            const indexBuffer = gl.createBuffer() as WebGLBuffer;\n            indexAttribute = gl.getAttribLocation(program, \"index\");\n            gl.enableVertexAttribArray(indexAttribute);\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n            gl.vertexAttribIPointer(indexAttribute, 1, gl.INT, 0, 0);\n            gl.vertexAttribDivisor(indexAttribute, 1);\n\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            gl.texImage2D(\n                gl.TEXTURE_2D,\n                0,\n                gl.RGBA32UI,\n                activeScene.tex.width,\n                activeScene.tex.height,\n                0,\n                gl.RGBA_INTEGER,\n                gl.UNSIGNED_INT,\n                activeScene.tex.data,\n            );\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n\n            for (const shaderPass of shaderPasses) {\n                shaderPass.init(this, program);\n            }\n\n            worker.onmessage = (e) => {\n                if (e.data.depthIndex) {\n                    const { depthIndex } = e.data;\n                    gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n                    gl.bufferData(gl.ARRAY_BUFFER, depthIndex, gl.STATIC_DRAW);\n                }\n            };\n\n            initialized = true;\n        };\n\n        this.render = (scene: Scene, camera: Camera) => {\n            if (scene.dirty || scene !== activeScene || camera !== activeCamera) {\n                if (initialized) {\n                    this.dispose();\n                }\n\n                activeScene = scene;\n                activeCamera = camera;\n\n                scene.updateTex();\n\n                initWebGL();\n\n                scene.dirty = false;\n            }\n\n            activeCamera.update(canvas.width, canvas.height);\n            worker.postMessage({ viewProj: activeCamera.viewProj });\n\n            if (activeScene.vertexCount > 0) {\n                for (const shaderPass of shaderPasses) {\n                    shaderPass.render();\n                }\n                gl.uniformMatrix4fv(u_view, false, activeCamera.viewMatrix.buffer);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n                gl.drawArraysInstanced(gl.TRIANGLE_FAN, 0, 4, activeScene.vertexCount);\n            } else {\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        };\n\n        this.dispose = () => {\n            worker.terminate();\n\n            gl.deleteShader(vertexShader);\n            gl.deleteShader(fragmentShader);\n            gl.deleteProgram(program);\n\n            gl.deleteBuffer(vertexBuffer);\n            gl.deleteBuffer(centerBuffer);\n            gl.deleteBuffer(colorBuffer);\n            gl.deleteBuffer(covABuffer);\n            gl.deleteBuffer(covBBuffer);\n\n            initialized = false;\n        };\n\n        this.resize();\n    }\n}\n","/*\n    from https://github.com/antimatter15/splat/blob/main/main.js\n*/\n\nexport const vertex = /* glsl */ `#version 300 es\nprecision highp float;\nprecision highp int;\n\nuniform highp usampler2D u_texture;\nuniform mat4 projection, view;\nuniform vec2 focal;\nuniform vec2 viewport;\n\nuniform bool u_useDepthFade;\nuniform float u_depthFade;\n\nin vec2 position;\nin int index;\n\nout vec4 vColor;\nout vec2 vPosition;\n\nvoid main () {\n    uvec4 cen = texelFetch(u_texture, ivec2((uint(index) & 0x3ffu) << 1, uint(index) >> 10), 0);\n    vec4 cam = view * vec4(uintBitsToFloat(cen.xyz), 1);\n    vec4 pos2d = projection * cam;\n\n    float clip = 1.2 * pos2d.w;\n    if (pos2d.z < -pos2d.w || pos2d.x < -clip || pos2d.x > clip || pos2d.y < -clip || pos2d.y > clip) {\n        gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n        return;\n    }\n\n\n    uvec4 cov = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 1) | 1u, uint(index) >> 10), 0);\n    vec2 u1 = unpackHalf2x16(cov.x), u2 = unpackHalf2x16(cov.y), u3 = unpackHalf2x16(cov.z);\n    mat3 Vrk = mat3(u1.x, u1.y, u2.x, u1.y, u2.y, u3.x, u2.x, u3.x, u3.y);\n\n    mat3 J = mat3(\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \n        0., 0., 0.\n    );\n\n    mat3 T = transpose(mat3(view)) * J;\n    mat3 cov2d = transpose(T) * Vrk * T;\n\n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\n    float lambda1 = mid + radius, lambda2 = mid - radius;\n\n    if(lambda2 < 0.0) return;\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n\n    vColor = vec4((cov.w) & 0xffu, (cov.w >> 8) & 0xffu, (cov.w >> 16) & 0xffu, (cov.w >> 24) & 0xffu) / 255.0;\n    vPosition = position;\n\n    float scalingFactor = 1.0;\n\n    if(u_useDepthFade) {\n        float depthNorm = (pos2d.z / pos2d.w + 1.0) / 2.0;\n        float near = 0.1; float far = 100.0;\n        float normalizedDepth = (2.0 * near) / (far + near - depthNorm * (far - near));\n        float start = max(normalizedDepth - 0.1, 0.0);\n        float end = min(normalizedDepth + 0.1, 1.0);\n        scalingFactor = clamp((u_depthFade - start) / (end - start), 0.0, 1.0);\n    }\n\n    vec2 vCenter = vec2(pos2d) / pos2d.w;\n    gl_Position = vec4(\n        vCenter \n        + position.x * majorAxis * scalingFactor / viewport \n        + position.y * minorAxis * scalingFactor / viewport, 0.0, 1.0);\n\n}\n`;\n","/*\n    from https://github.com/antimatter15/splat/blob/main/main.js\n*/\n\nexport const frag = /* glsl */ `#version 300 es\nprecision highp float;\n\nin vec4 vColor;\nin vec2 vPosition;\n\nout vec4 fragColor;\n\nvoid main () {\n    float A = -dot(vPosition, vPosition);\n    if (A < -4.0) discard;\n    float B = exp(A) * vColor.a;\n    fragColor = vec4(B * vColor.rgb, B);\n}\n`;\n","import type { Camera } from \"../cameras/Camera\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass OrbitControls {\n    minAngle: number = -90;\n    maxAngle: number = 90;\n    minZoom: number = 0.1;\n    maxZoom: number = 30;\n    orbitSpeed: number = 1;\n    panSpeed: number = 1;\n    zoomSpeed: number = 1;\n    dampening: number = 0.12;\n    update: () => void;\n    dispose: () => void;\n\n    constructor(\n        camera: Camera,\n        domElement: HTMLElement,\n        alpha: number = 0.5,\n        beta: number = 0.5,\n        radius: number = 5,\n        enableKeyboardControls: boolean = true,\n    ) {\n        let target = new Vector3();\n\n        let desiredTarget = target.clone();\n        let desiredAlpha = alpha;\n        let desiredBeta = beta;\n        let desiredRadius = radius;\n\n        let dragging = false;\n        let panning = false;\n        let lastDist = 0;\n        let lastX = 0;\n        let lastY = 0;\n\n        const keys: { [key: string]: boolean } = {};\n\n        const computeZoomNorm = () => {\n            return 0.1 + (0.9 * (desiredRadius - this.minZoom)) / (this.maxZoom - this.minZoom);\n        };\n\n        const onKeyDown = (e: KeyboardEvent) => {\n            keys[e.code] = true;\n            // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = true;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = true;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = true;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = true;\n        };\n\n        const onKeyUp = (e: KeyboardEvent) => {\n            keys[e.code] = false; // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = false;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = false;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = false;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = false;\n        };\n\n        const onMouseDown = (e: MouseEvent) => {\n            preventDefault(e);\n\n            dragging = true;\n            panning = e.button === 2;\n            lastX = e.clientX;\n            lastY = e.clientY;\n            window.addEventListener(\"mouseup\", onMouseUp);\n        };\n\n        const onMouseUp = (e: MouseEvent) => {\n            preventDefault(e);\n\n            dragging = false;\n            panning = false;\n            window.removeEventListener(\"mouseup\", onMouseUp);\n        };\n\n        const onMouseMove = (e: MouseEvent) => {\n            preventDefault(e);\n\n            if (!dragging) return;\n\n            const dx = e.clientX - lastX;\n            const dy = e.clientY - lastY;\n\n            if (panning) {\n                const zoomNorm = computeZoomNorm();\n                const panX = -dx * this.panSpeed * 0.01 * zoomNorm;\n                const panY = -dy * this.panSpeed * 0.01 * zoomNorm;\n                const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n                const right = new Vector3(R[0], R[3], R[6]);\n                const up = new Vector3(R[1], R[4], R[7]);\n                desiredTarget = desiredTarget.add(right.multiply(panX));\n                desiredTarget = desiredTarget.add(up.multiply(panY));\n            } else {\n                desiredAlpha -= dx * this.orbitSpeed * 0.003;\n                desiredBeta += dy * this.orbitSpeed * 0.003;\n                desiredBeta = Math.min(\n                    Math.max(desiredBeta, (this.minAngle * Math.PI) / 180),\n                    (this.maxAngle * Math.PI) / 180,\n                );\n            }\n\n            lastX = e.clientX;\n            lastY = e.clientY;\n        };\n\n        const onWheel = (e: WheelEvent) => {\n            preventDefault(e);\n\n            const zoomNorm = computeZoomNorm();\n            desiredRadius += e.deltaY * this.zoomSpeed * 0.025 * zoomNorm;\n            desiredRadius = Math.min(Math.max(desiredRadius, this.minZoom), this.maxZoom);\n        };\n\n        const onTouchStart = (e: TouchEvent) => {\n            preventDefault(e);\n\n            if (e.touches.length === 1) {\n                dragging = true;\n                panning = false;\n                lastX = e.touches[0].clientX;\n                lastY = e.touches[0].clientY;\n                lastDist = 0;\n            } else if (e.touches.length === 2) {\n                dragging = true;\n                panning = true;\n                lastX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\n                lastY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\n                const distX = e.touches[0].clientX - e.touches[1].clientX;\n                const distY = e.touches[0].clientY - e.touches[1].clientY;\n                lastDist = Math.sqrt(distX * distX + distY * distY);\n            }\n        };\n\n        const onTouchEnd = (e: TouchEvent) => {\n            preventDefault(e);\n\n            dragging = false;\n            panning = false;\n        };\n\n        const onTouchMove = (e: TouchEvent) => {\n            preventDefault(e);\n\n            if (!dragging) return;\n\n            if (panning) {\n                const zoomNorm = computeZoomNorm();\n\n                const distX = e.touches[0].clientX - e.touches[1].clientX;\n                const distY = e.touches[0].clientY - e.touches[1].clientY;\n                const dist = Math.sqrt(distX * distX + distY * distY);\n                const delta = lastDist - dist;\n                desiredRadius += delta * this.zoomSpeed * 0.1 * zoomNorm;\n                desiredRadius = Math.min(Math.max(desiredRadius, this.minZoom), this.maxZoom);\n                lastDist = dist;\n\n                const touchX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\n                const touchY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\n                const dx = touchX - lastX;\n                const dy = touchY - lastY;\n                const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n                const right = new Vector3(R[0], R[3], R[6]);\n                const up = new Vector3(R[1], R[4], R[7]);\n                desiredTarget = desiredTarget.add(right.multiply(-dx * this.panSpeed * 0.025 * zoomNorm));\n                desiredTarget = desiredTarget.add(up.multiply(-dy * this.panSpeed * 0.025 * zoomNorm));\n                lastX = touchX;\n                lastY = touchY;\n            } else {\n                const dx = e.touches[0].clientX - lastX;\n                const dy = e.touches[0].clientY - lastY;\n\n                desiredAlpha -= dx * this.orbitSpeed * 0.003;\n                desiredBeta += dy * this.orbitSpeed * 0.003;\n                desiredBeta = Math.min(\n                    Math.max(desiredBeta, (this.minAngle * Math.PI) / 180),\n                    (this.maxAngle * Math.PI) / 180,\n                );\n\n                lastX = e.touches[0].clientX;\n                lastY = e.touches[0].clientY;\n            }\n        };\n\n        const lerp = (a: number, b: number, t: number) => {\n            return (1 - t) * a + t * b;\n        };\n\n        this.update = () => {\n            alpha = lerp(alpha, desiredAlpha, this.dampening);\n            beta = lerp(beta, desiredBeta, this.dampening);\n            radius = lerp(radius, desiredRadius, this.dampening);\n            target = target.lerp(desiredTarget, this.dampening);\n\n            const x = target.x + radius * Math.sin(alpha) * Math.cos(beta);\n            const y = target.y - radius * Math.sin(beta);\n            const z = target.z - radius * Math.cos(alpha) * Math.cos(beta);\n            camera.position.set(x, y, z);\n\n            const direction = target.subtract(camera.position).normalize();\n            const rx = Math.asin(-direction.y);\n            const ry = Math.atan2(direction.x, direction.z);\n            camera.rotation = Quaternion.FromEuler(new Vector3(rx, ry, 0));\n\n            // Just spit balling here on the values\n            const moveSpeed = 0.025;\n            const rotateSpeed = 0.01;\n\n            const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n            const forward = new Vector3(-R[2], -R[5], -R[8]);\n            const right = new Vector3(R[0], R[3], R[6]);\n\n            if (keys[\"KeyS\"]) desiredTarget = desiredTarget.add(forward.multiply(moveSpeed));\n            if (keys[\"KeyW\"]) desiredTarget = desiredTarget.subtract(forward.multiply(moveSpeed));\n            if (keys[\"KeyA\"]) desiredTarget = desiredTarget.subtract(right.multiply(moveSpeed));\n            if (keys[\"KeyD\"]) desiredTarget = desiredTarget.add(right.multiply(moveSpeed));\n\n            // Add rotation with 'e' and 'q' for horizontal rotation\n            if (keys[\"KeyE\"]) desiredAlpha += rotateSpeed;\n            if (keys[\"KeyQ\"]) desiredAlpha -= rotateSpeed;\n\n            // Add rotation with 'r' and 'f' for vertical rotation\n            if (keys[\"KeyR\"]) desiredBeta += rotateSpeed;\n            if (keys[\"KeyF\"]) desiredBeta -= rotateSpeed;\n        };\n\n        const preventDefault = (e: Event) => {\n            e.preventDefault();\n            e.stopPropagation();\n        };\n\n        this.dispose = () => {\n            domElement.removeEventListener(\"dragenter\", preventDefault);\n            domElement.removeEventListener(\"dragover\", preventDefault);\n            domElement.removeEventListener(\"dragleave\", preventDefault);\n            domElement.removeEventListener(\"contextmenu\", preventDefault);\n\n            domElement.removeEventListener(\"mousedown\", onMouseDown);\n            domElement.removeEventListener(\"mousemove\", onMouseMove);\n            domElement.removeEventListener(\"wheel\", onWheel);\n\n            domElement.removeEventListener(\"touchstart\", onTouchStart);\n            domElement.removeEventListener(\"touchend\", onTouchEnd);\n            domElement.removeEventListener(\"touchmove\", onTouchMove);\n\n            if (enableKeyboardControls) {\n                window.removeEventListener(\"keydown\", onKeyDown);\n                window.removeEventListener(\"keyup\", onKeyUp);\n            }\n        };\n\n        if (enableKeyboardControls) {\n            window.addEventListener(\"keydown\", onKeyDown);\n            window.addEventListener(\"keyup\", onKeyUp);\n        }\n\n        domElement.addEventListener(\"dragenter\", preventDefault);\n        domElement.addEventListener(\"dragover\", preventDefault);\n        domElement.addEventListener(\"dragleave\", preventDefault);\n        domElement.addEventListener(\"contextmenu\", preventDefault);\n\n        domElement.addEventListener(\"mousedown\", onMouseDown);\n        domElement.addEventListener(\"mousemove\", onMouseMove);\n        domElement.addEventListener(\"wheel\", onWheel);\n\n        domElement.addEventListener(\"touchstart\", onTouchStart);\n        domElement.addEventListener(\"touchend\", onTouchEnd);\n        domElement.addEventListener(\"touchmove\", onTouchMove);\n\n        this.update();\n    }\n}\n\nexport { OrbitControls };\n","import { WebGLRenderer } from \"../../WebGLRenderer\";\n\nclass ShaderPass {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    init(renderer: WebGLRenderer, program: WebGLProgram) {}\n\n    render() {}\n}\n\nexport { ShaderPass };\n"],"names":["Vector3","constructor","x","y","z","this","set","add","v","subtract","multiply","lerp","t","length","Math","sqrt","normalize","flat","clone","Quaternion","w","l","q","w1","x1","y1","z1","w2","x2","y2","z2","FromEuler","e","halfX","halfY","halfZ","cy","cos","sy","sin","cp","sp","cz","sz","toEuler","sinr_cosp","cosr_cosp","atan2","sinp","abs","sign","PI","asin","siny_cosp","cosy_cosp","FromMatrix3","matrix","m","buffer","trace","s","Object3D","position","rotation","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","Array","a","b","RotationFromQuaternion","RotationFromEuler","cx","sx","Matrix4","n14","n24","n34","n41","n42","n43","n44","Camera","fx","fy","near","far","super","getViewMatrix","R","camToWorld","projectionMatrix","viewMatrix","viewProj","update","width","height","SplatTexture","data","FromScene","scene","_floatView","Float32Array","_int32View","Int32Array","floatToHalf","float","f","exp","newExp","frac","packHalf2x16","texwidth","texheight","ceil","vertexCount","texdata","Uint32Array","texdata_c","Uint8Array","texdata_f","f_buffer","u_buffer","i","scale","rot","M","map","k","floor","sigma","Scene","tex","dirty","updateTex","setData","translate","translation","rotate","currentRotation","newRot","round","Loader","LoadAsync","url","onProgress","req","fetch","mode","credentials","status","Error","reader","body","getReader","contentLength","parseInt","headers","get","bytesRead","done","value","read","LoadFromFileAsync","file","FileReader","onload","target","result","onprogress","loaded","total","readAsArrayBuffer","Promise","resolve","onloadend","processPlyBuffer","inputBuffer","ubuf","header","TextDecoder","decode","slice","header_end","header_end_index","indexOf","exec","row_offset","offsets","types","TYPE_MAP","double","int","uint","short","ushort","uchar","prop","split","filter","startsWith","_p","type","name","arrayType","replace","dataView","DataView","row","attrs","Proxy","_target","ArrayBuffer","j","scales","rgba","Uint8ClampedArray","qlen","rot_0","rot_1","rot_2","rot_3","scale_0","scale_1","scale_2","SH_C0","f_dc_0","f_dc_1","f_dc_2","red","green","blue","opacity","PLYLoader","plyData","progress","FadeInPass","speed","activeRenderer","u_useDepthFade","u_depthFade","active","init","renderer","program","gl","getUniformLocation","uniform1i","uniform1f","render","min","WebGLRenderer","optionalCanvas","optionalShaderPasses","canvas","document","createElement","style","display","boxSizing","margin","padding","appendChild","background","domElement","getContext","antialias","shaderPasses","activeScene","activeCamera","worker","vertexShader","fragmentShader","u_projection","u_viewport","u_focal","u_view","u_texture","positionAttribute","indexAttribute","vertexBuffer","push","initialized","resize","clientWidth","clientHeight","setSize","viewport","uniformMatrix4fv","uniform2fv","initWebGL","SortWorker","postMessage","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","useProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","disable","DEPTH_TEST","enable","BLEND","blendFuncSeparate","ONE_MINUS_DST_ALPHA","ONE","blendEquationSeparate","FUNC_ADD","triangleVertices","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","texture","createTexture","bindTexture","TEXTURE_2D","indexBuffer","vertexAttribIPointer","INT","vertexAttribDivisor","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA32UI","RGBA_INTEGER","UNSIGNED_INT","activeTexture","TEXTURE0","shaderPass","onmessage","depthIndex","camera","dispose","clear","COLOR_BUFFER_BIT","drawArraysInstanced","TRIANGLE_FAN","terminate","deleteShader","deleteProgram","deleteBuffer","centerBuffer","colorBuffer","covABuffer","covBBuffer","OrbitControls","alpha","beta","radius","enableKeyboardControls","minAngle","maxAngle","minZoom","maxZoom","orbitSpeed","panSpeed","zoomSpeed","dampening","desiredTarget","desiredAlpha","desiredBeta","desiredRadius","dragging","panning","lastDist","lastX","lastY","keys","computeZoomNorm","onKeyDown","code","onKeyUp","onMouseDown","preventDefault","button","clientX","clientY","window","addEventListener","onMouseUp","removeEventListener","onMouseMove","dx","dy","zoomNorm","panX","panY","right","up","max","onWheel","deltaY","onTouchStart","touches","distX","distY","onTouchEnd","onTouchMove","dist","touchX","touchY","direction","rx","ry","moveSpeed","rotateSpeed","forward","stopPropagation","ShaderPass"],"mappings":"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"}