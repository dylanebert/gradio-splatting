import { Scene } from "../../../core/Scene";
import { Splat } from "../../../splats/Splat";
declare class RenderData {
    dataChanged: boolean;
    transformsChanged: boolean;
    private _splatIndices;
    private _offsets;
    private _data;
    private _width;
    private _height;
    private _transforms;
    private _transformsWidth;
    private _transformsHeight;
    private _transformIndices;
    private _transformIndicesWidth;
    private _transformIndicesHeight;
    private _positions;
    private _rotations;
    private _scales;
    private _vertexCount;
    private _updating;
    private _dirty;
    private _worker;
    getSplat: (index: number) => Splat | null;
    getLocalIndex: (splat: Splat, index: number) => number;
    markDirty: (splat: Splat) => void;
    rebuild: () => void;
    dispose: () => void;
    constructor(scene: Scene);
    get offsets(): Map<Splat, number>;
    get data(): Uint32Array;
    get width(): number;
    get height(): number;
    get transforms(): Float32Array;
    get transformsWidth(): number;
    get transformsHeight(): number;
    get transformIndices(): Uint32Array;
    get transformIndicesWidth(): number;
    get transformIndicesHeight(): number;
    get positions(): Float32Array;
    get rotations(): Float32Array;
    get scales(): Float32Array;
    get vertexCount(): number;
    get needsRebuild(): boolean;
    get updating(): boolean;
}
export { RenderData };
