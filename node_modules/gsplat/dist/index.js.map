{"version":3,"file":"index.js","sources":["../src/math/Vector3.ts","../src/math/Quaternion.ts","../src/core/EventDispatcher.ts","../src/core/Object3D.ts","../src/math/Matrix3.ts","../src/math/Matrix4.ts","../src/cameras/Camera.ts","../src/core/Scene.ts","../src/loaders/Loader.ts","../src/loaders/PLYLoader.ts","../src/renderers/webgl/passes/FadeInPass.ts","../src/renderers/WebGLRenderer.ts","../src/renderers/webgl/shaders/vertex.glsl.ts","../src/renderers/webgl/shaders/frag.glsl.ts","../src/controls/OrbitControls.ts","../src/renderers/webgl/passes/ShaderPass.ts"],"sourcesContent":["class Vector3 {\n    public readonly x: number;\n    public readonly y: number;\n    public readonly z: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    equals(v: Vector3): boolean {\n        if (this.x !== v.x) {\n            return false;\n        }\n        if (this.y !== v.y) {\n            return false;\n        }\n        if (this.z !== v.z) {\n            return false;\n        }\n\n        return true;\n    }\n\n    add(v: Vector3): Vector3;\n    add(v: number): Vector3;\n    add(v: Vector3 | number): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x + v, this.y + v, this.z + v);\n        } else {\n            return new Vector3(this.x + v.x, this.y + v.y, this.z + v.z);\n        }\n    }\n\n    subtract(v: Vector3): Vector3;\n    subtract(v: number): Vector3;\n    subtract(v: Vector3 | number): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x - v, this.y - v, this.z - v);\n        } else {\n            return new Vector3(this.x - v.x, this.y - v.y, this.z - v.z);\n        }\n    }\n\n    multiply(v: Vector3): Vector3;\n    multiply(v: number): Vector3;\n    multiply(v: Vector3 | number): Vector3 {\n        if (typeof v === \"number\") {\n            return new Vector3(this.x * v, this.y * v, this.z * v);\n        } else {\n            return new Vector3(this.x * v.x, this.y * v.y, this.z * v.z);\n        }\n    }\n\n    lerp(v: Vector3, t: number): Vector3 {\n        return new Vector3(this.x + (v.x - this.x) * t, this.y + (v.y - this.y) * t, this.z + (v.z - this.z) * t);\n    }\n\n    length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    distanceTo(v: Vector3): number {\n        return Math.sqrt((this.x - v.x) ** 2 + (this.y - v.y) ** 2 + (this.z - v.z) ** 2);\n    }\n\n    normalize(): Vector3 {\n        const length = this.length();\n\n        return new Vector3(this.x / length, this.y / length, this.z / length);\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z];\n    }\n\n    clone(): Vector3 {\n        return new Vector3(this.x, this.y, this.z);\n    }\n}\n\nexport { Vector3 };\n","import { Matrix3 } from \"./Matrix3\";\nimport { Vector3 } from \"./Vector3\";\n\nclass Quaternion {\n    public readonly x: number;\n    public readonly y: number;\n    public readonly z: number;\n    public readonly w: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    equals(q: Quaternion): boolean {\n        if (this.x !== q.x) {\n            return false;\n        }\n        if (this.y !== q.y) {\n            return false;\n        }\n        if (this.z !== q.z) {\n            return false;\n        }\n        if (this.w !== q.w) {\n            return false;\n        }\n\n        return true;\n    }\n\n    normalize(): Quaternion {\n        const l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n        return new Quaternion(this.x / l, this.y / l, this.z / l, this.w / l);\n    }\n\n    multiply(q: Quaternion): Quaternion {\n        const w1 = this.w,\n            x1 = this.x,\n            y1 = this.y,\n            z1 = this.z;\n        const w2 = q.w,\n            x2 = q.x,\n            y2 = q.y,\n            z2 = q.z;\n\n        return new Quaternion(\n            w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2,\n            w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2,\n            w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2,\n            w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2,\n        );\n    }\n\n    flat(): number[] {\n        return [this.x, this.y, this.z, this.w];\n    }\n\n    clone(): Quaternion {\n        return new Quaternion(this.x, this.y, this.z, this.w);\n    }\n\n    static FromEuler(e: Vector3): Quaternion {\n        const halfX = e.x / 2;\n        const halfY = e.y / 2;\n        const halfZ = e.z / 2;\n        const cy = Math.cos(halfY);\n        const sy = Math.sin(halfY);\n        const cp = Math.cos(halfX);\n        const sp = Math.sin(halfX);\n        const cz = Math.cos(halfZ);\n        const sz = Math.sin(halfZ);\n\n        const q = new Quaternion(\n            cy * sp * cz + sy * cp * sz,\n            sy * cp * cz - cy * sp * sz,\n            cy * cp * sz - sy * sp * cz,\n            cy * cp * cz + sy * sp * sz,\n        );\n        return q;\n    }\n\n    toEuler(): Vector3 {\n        const sinr_cosp = 2 * (this.w * this.x + this.y * this.z);\n        const cosr_cosp = 1 - 2 * (this.x * this.x + this.y * this.y);\n        const x = Math.atan2(sinr_cosp, cosr_cosp);\n\n        let y;\n        const sinp = 2 * (this.w * this.y - this.z * this.x);\n        if (Math.abs(sinp) >= 1) {\n            y = (Math.sign(sinp) * Math.PI) / 2;\n        } else {\n            y = Math.asin(sinp);\n        }\n\n        const siny_cosp = 2 * (this.w * this.z + this.x * this.y);\n        const cosy_cosp = 1 - 2 * (this.y * this.y + this.z * this.z);\n        const z = Math.atan2(siny_cosp, cosy_cosp);\n\n        return new Vector3(x, y, z);\n    }\n\n    static FromMatrix3(matrix: Matrix3): Quaternion {\n        const m = matrix.buffer;\n        const trace = m[0] + m[4] + m[8];\n        let x, y, z, w;\n        if (trace > 0) {\n            const s = 0.5 / Math.sqrt(trace + 1.0);\n            w = 0.25 / s;\n            x = (m[7] - m[5]) * s;\n            y = (m[2] - m[6]) * s;\n            z = (m[3] - m[1]) * s;\n        } else if (m[0] > m[4] && m[0] > m[8]) {\n            const s = 2.0 * Math.sqrt(1.0 + m[0] - m[4] - m[8]);\n            w = (m[7] - m[5]) / s;\n            x = 0.25 * s;\n            y = (m[1] + m[3]) / s;\n            z = (m[2] + m[6]) / s;\n        } else if (m[4] > m[8]) {\n            const s = 2.0 * Math.sqrt(1.0 + m[4] - m[0] - m[8]);\n            w = (m[2] - m[6]) / s;\n            x = (m[1] + m[3]) / s;\n            y = 0.25 * s;\n            z = (m[5] + m[7]) / s;\n        } else {\n            const s = 2.0 * Math.sqrt(1.0 + m[8] - m[0] - m[4]);\n            w = (m[3] - m[1]) / s;\n            x = (m[2] + m[6]) / s;\n            y = (m[5] + m[7]) / s;\n            z = 0.25 * s;\n        }\n        return new Quaternion(x, y, z, w);\n    }\n}\n\nexport { Quaternion };\n","class EventDispatcher {\n    addEventListener: (type: string, listener: (event: Event) => void) => void;\n    removeEventListener: (type: string, listener: (event: Event) => void) => void;\n    hasEventListener: (type: string, listener: (event: Event) => void) => boolean;\n    dispatchEvent: (event: Event) => void;\n\n    constructor() {\n        const listeners = new Map<string, Set<(event: Event) => void>>();\n\n        this.addEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                listeners.set(type, new Set());\n            }\n\n            listeners.get(type)!.add(listener);\n        };\n\n        this.removeEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                return;\n            }\n\n            listeners.get(type)!.delete(listener);\n        };\n\n        this.hasEventListener = (type: string, listener: (event: Event) => void) => {\n            if (!listeners.has(type)) {\n                return false;\n            }\n\n            return listeners.get(type)!.has(listener);\n        };\n\n        this.dispatchEvent = (event: Event) => {\n            if (!listeners.has(event.type)) {\n                return;\n            }\n\n            for (const listener of listeners.get(event.type)!) {\n                listener(event);\n            }\n        };\n    }\n}\n\nexport { EventDispatcher };\n","import { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { EventDispatcher } from \"./EventDispatcher\";\n\nclass Object3D extends EventDispatcher {\n    private _position: Vector3;\n    private _rotation: Quaternion;\n    private _changeEvent: Event;\n\n    constructor() {\n        super();\n\n        this._position = new Vector3();\n        this._rotation = new Quaternion();\n        this._changeEvent = { type: \"change\" } as Event;\n    }\n\n    get position() {\n        return this._position;\n    }\n\n    set position(position: Vector3) {\n        if (!this._position.equals(position)) {\n            this._position = position;\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(rotation: Quaternion) {\n        if (!this._rotation.equals(rotation)) {\n            this._rotation = rotation;\n            this.dispatchEvent(this._changeEvent);\n        }\n    }\n}\n\nexport { Object3D };\n","import { Quaternion } from \"./Quaternion\";\nimport type { Vector3 } from \"./Vector3\";\n\nclass Matrix3 {\n    public readonly buffer: number[];\n\n    // prettier-ignore\n    constructor(n11: number = 1, n12: number = 0, n13: number = 0,\n                n21: number = 0, n22: number = 1, n23: number = 0,\n                n31: number = 0, n32: number = 0, n33: number = 1) {\n        this.buffer = [\n            n11, n12, n13,\n            n21, n22, n23,\n            n31, n32, n33\n        ];\n    }\n\n    equals(m: Matrix3): boolean {\n        if (this.buffer.length !== m.buffer.length) {\n            return false;\n        }\n        if (this.buffer === m.buffer) {\n            return true;\n        }\n        for (let i = 0; i < this.buffer.length; i++) {\n            if (this.buffer[i] !== m.buffer[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    multiply(m: Matrix3): Matrix3 {\n        const a = this.buffer;\n        const b = m.buffer;\n        return new Matrix3(\n            b[0] * a[0] + b[3] * a[1] + b[6] * a[2],\n            b[1] * a[0] + b[4] * a[1] + b[7] * a[2],\n            b[2] * a[0] + b[5] * a[1] + b[8] * a[2],\n            b[0] * a[3] + b[3] * a[4] + b[6] * a[5],\n            b[1] * a[3] + b[4] * a[4] + b[7] * a[5],\n            b[2] * a[3] + b[5] * a[4] + b[8] * a[5],\n            b[0] * a[6] + b[3] * a[7] + b[6] * a[8],\n            b[1] * a[6] + b[4] * a[7] + b[7] * a[8],\n            b[2] * a[6] + b[5] * a[7] + b[8] * a[8],\n        );\n    }\n\n    clone(): Matrix3 {\n        const e = this.buffer;\n        // prettier-ignore\n        return new Matrix3(\n            e[0], e[1], e[2],\n            e[3], e[4], e[5],\n            e[6], e[7], e[8]\n        );\n    }\n\n    static Eye(v: number = 1): Matrix3 {\n        return new Matrix3(v, 0, 0, 0, v, 0, 0, 0, v);\n    }\n\n    static Diagonal(v: Vector3): Matrix3 {\n        return new Matrix3(v.x, 0, 0, 0, v.y, 0, 0, 0, v.z);\n    }\n\n    static RotationFromQuaternion(q: Quaternion): Matrix3 {\n        const matrix = new Matrix3(\n            1 - 2 * q.y * q.y - 2 * q.z * q.z,\n            2 * q.x * q.y - 2 * q.z * q.w,\n            2 * q.x * q.z + 2 * q.y * q.w,\n            2 * q.x * q.y + 2 * q.z * q.w,\n            1 - 2 * q.x * q.x - 2 * q.z * q.z,\n            2 * q.y * q.z - 2 * q.x * q.w,\n            2 * q.x * q.z - 2 * q.y * q.w,\n            2 * q.y * q.z + 2 * q.x * q.w,\n            1 - 2 * q.x * q.x - 2 * q.y * q.y,\n        );\n        return matrix;\n    }\n\n    static RotationFromEuler(m: Vector3): Matrix3 {\n        const cx = Math.cos(m.x);\n        const sx = Math.sin(m.x);\n        const cy = Math.cos(m.y);\n        const sy = Math.sin(m.y);\n        const cz = Math.cos(m.z);\n        const sz = Math.sin(m.z);\n\n        const rotationMatrix = [\n            cy * cz + sy * sx * sz,\n            -cy * sz + sy * sx * cz,\n            sy * cx,\n            cx * sz,\n            cx * cz,\n            -sx,\n            -sy * cz + cy * sx * sz,\n            sy * sz + cy * sx * cz,\n            cy * cx,\n        ];\n\n        return new Matrix3(...rotationMatrix);\n    }\n}\n\nexport { Matrix3 };\n","class Matrix4 {\n    public readonly buffer: number[];\n\n    // prettier-ignore\n    constructor(n11: number = 1, n12: number = 0, n13: number = 0, n14: number = 0, \n                n21: number = 0, n22: number = 1, n23: number = 0, n24: number = 0, \n                n31: number = 0, n32: number = 0, n33: number = 1, n34: number = 0, \n                n41: number = 0, n42: number = 0, n43: number = 0, n44: number = 1) {\n        this.buffer = [\n            n11, n12, n13, n14, \n            n21, n22, n23, n24, \n            n31, n32, n33, n34, \n            n41, n42, n43, n44\n        ];\n    }\n\n    equals(m: Matrix4): boolean {\n        if (this.buffer.length !== m.buffer.length) {\n            return false;\n        }\n        if (this.buffer === m.buffer) {\n            return true;\n        }\n        for (let i = 0; i < this.buffer.length; i++) {\n            if (this.buffer[i] !== m.buffer[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    multiply(m: Matrix4): Matrix4 {\n        const a = this.buffer;\n        const b = m.buffer;\n        return new Matrix4(\n            b[0] * a[0] + b[1] * a[4] + b[2] * a[8] + b[3] * a[12],\n            b[0] * a[1] + b[1] * a[5] + b[2] * a[9] + b[3] * a[13],\n            b[0] * a[2] + b[1] * a[6] + b[2] * a[10] + b[3] * a[14],\n            b[0] * a[3] + b[1] * a[7] + b[2] * a[11] + b[3] * a[15],\n            b[4] * a[0] + b[5] * a[4] + b[6] * a[8] + b[7] * a[12],\n            b[4] * a[1] + b[5] * a[5] + b[6] * a[9] + b[7] * a[13],\n            b[4] * a[2] + b[5] * a[6] + b[6] * a[10] + b[7] * a[14],\n            b[4] * a[3] + b[5] * a[7] + b[6] * a[11] + b[7] * a[15],\n            b[8] * a[0] + b[9] * a[4] + b[10] * a[8] + b[11] * a[12],\n            b[8] * a[1] + b[9] * a[5] + b[10] * a[9] + b[11] * a[13],\n            b[8] * a[2] + b[9] * a[6] + b[10] * a[10] + b[11] * a[14],\n            b[8] * a[3] + b[9] * a[7] + b[10] * a[11] + b[11] * a[15],\n            b[12] * a[0] + b[13] * a[4] + b[14] * a[8] + b[15] * a[12],\n            b[12] * a[1] + b[13] * a[5] + b[14] * a[9] + b[15] * a[13],\n            b[12] * a[2] + b[13] * a[6] + b[14] * a[10] + b[15] * a[14],\n            b[12] * a[3] + b[13] * a[7] + b[14] * a[11] + b[15] * a[15],\n        );\n    }\n\n    clone(): Matrix4 {\n        const e = this.buffer;\n        // prettier-ignore\n        return new Matrix4(\n            e[0], e[1], e[2], e[3], \n            e[4], e[5], e[6], e[7], \n            e[8], e[9], e[10], e[11], \n            e[12], e[13], e[14], e[15]\n        );\n    }\n}\n\nexport { Matrix4 };\n","import { Object3D } from \"../core/Object3D\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Matrix4 } from \"../math/Matrix4\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass Camera extends Object3D {\n    fx: number;\n    fy: number;\n\n    near: number;\n    far: number;\n\n    projectionMatrix: Matrix4;\n    viewMatrix: Matrix4;\n    viewProj: Matrix4;\n\n    update: (width: number, height: number) => void;\n\n    constructor(\n        position = new Vector3(0, 0, -5),\n        rotation = new Quaternion(),\n        fx = 1132,\n        fy = 1132,\n        near = 0.1,\n        far = 100,\n    ) {\n        super();\n\n        const getViewMatrix = (): Matrix4 => {\n            const R = Matrix3.RotationFromQuaternion(this.rotation).buffer;\n            const t = this.position.flat();\n            const camToWorld = [\n                [R[0], R[1], R[2], 0],\n                [R[3], R[4], R[5], 0],\n                [R[6], R[7], R[8], 0],\n                [\n                    -t[0] * R[0] - t[1] * R[3] - t[2] * R[6],\n                    -t[0] * R[1] - t[1] * R[4] - t[2] * R[7],\n                    -t[0] * R[2] - t[1] * R[5] - t[2] * R[8],\n                    1,\n                ],\n            ].flat();\n            return new Matrix4(...camToWorld);\n        };\n\n        this.position = position;\n        this.rotation = rotation;\n        this.fx = fx;\n        this.fy = fy;\n        this.near = near;\n        this.far = far;\n        this.projectionMatrix = new Matrix4();\n        this.viewMatrix = new Matrix4();\n        this.viewProj = new Matrix4();\n\n        this.update = (width: number, height: number) => {\n            // prettier-ignore\n            this.projectionMatrix = new Matrix4(\n                2 * this.fx / width, 0, 0, 0,\n                0, -2 * this.fy / height, 0, 0,\n                0, 0, this.far / (this.far - this.near), 1,\n                0, 0, -(this.far * this.near) / (this.far - this.near), 0\n            );\n            this.viewMatrix = getViewMatrix();\n            this.viewProj = this.projectionMatrix.multiply(this.viewMatrix);\n        };\n    }\n}\n\nexport { Camera };\n","import { Matrix3 } from \"../math/Matrix3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { EventDispatcher } from \"./EventDispatcher\";\n\nclass Scene extends EventDispatcher {\n    static RowLength = 3 * 4 + 3 * 4 + 4 + 4;\n\n    private _data: Uint32Array;\n    private _width: number;\n    private _height: number;\n    private _vertexCount: number;\n    private _positions: Float32Array;\n    private _rotations: Float32Array;\n    private _scales: Float32Array;\n\n    setData: (data: Uint8Array) => void;\n    translate: (translation: Vector3) => void;\n    rotate: (rotation: Quaternion) => void;\n    scale: (scale: Vector3) => void;\n    limitBox: (xMin: number, xMax: number, yMin: number, yMax: number, zMin: number, zMax: number) => void;\n    saveToFile: (name: string) => void;\n\n    constructor() {\n        super();\n\n        const _floatView: Float32Array = new Float32Array(1);\n        const _int32View: Int32Array = new Int32Array(_floatView.buffer);\n\n        const floatToHalf = (float: number) => {\n            _floatView[0] = float;\n            const f = _int32View[0];\n\n            const sign = (f >> 31) & 0x0001;\n            const exp = (f >> 23) & 0x00ff;\n            let frac = f & 0x007fffff;\n\n            let newExp;\n            if (exp == 0) {\n                newExp = 0;\n            } else if (exp < 113) {\n                newExp = 0;\n                frac |= 0x00800000;\n                frac = frac >> (113 - exp);\n                if (frac & 0x01000000) {\n                    newExp = 1;\n                    frac = 0;\n                }\n            } else if (exp < 142) {\n                newExp = exp - 112;\n            } else {\n                newExp = 31;\n                frac = 0;\n            }\n\n            return (sign << 15) | (newExp << 10) | (frac >> 13);\n        };\n\n        const packHalf2x16 = (x: number, y: number) => {\n            return (floatToHalf(x) | (floatToHalf(y) << 16)) >>> 0;\n        };\n\n        const changeEvent = { type: \"change\" } as Event;\n\n        this._data = new Uint32Array(0);\n        this._vertexCount = 0;\n        this._width = 2048;\n        this._height = 0;\n        this._positions = new Float32Array(0);\n        this._rotations = new Float32Array(0);\n        this._scales = new Float32Array(0);\n\n        this.setData = (data: Uint8Array) => {\n            this._vertexCount = data.length / Scene.RowLength;\n            this._height = Math.ceil((2 * this._vertexCount) / this._width);\n            this._data = new Uint32Array(this._width * this._height * 4);\n            this._positions = new Float32Array(3 * this._vertexCount);\n            this._rotations = new Float32Array(4 * this._vertexCount);\n            this._scales = new Float32Array(3 * this._vertexCount);\n\n            const f_buffer = new Float32Array(data.buffer);\n            const u_buffer = new Uint8Array(data.buffer);\n\n            const data_c = new Uint8Array(this._data.buffer);\n            const data_f = new Float32Array(this._data.buffer);\n\n            for (let i = 0; i < this._vertexCount; i++) {\n                this._positions[3 * i + 0] = f_buffer[8 * i + 0];\n                this._positions[3 * i + 1] = f_buffer[8 * i + 1];\n                this._positions[3 * i + 2] = f_buffer[8 * i + 2];\n\n                this._rotations[4 * i + 0] = (u_buffer[32 * i + 28 + 0] - 128) / 128;\n                this._rotations[4 * i + 1] = (u_buffer[32 * i + 28 + 1] - 128) / 128;\n                this._rotations[4 * i + 2] = (u_buffer[32 * i + 28 + 2] - 128) / 128;\n                this._rotations[4 * i + 3] = (u_buffer[32 * i + 28 + 3] - 128) / 128;\n\n                this._scales[3 * i + 0] = f_buffer[8 * i + 3 + 0];\n                this._scales[3 * i + 1] = f_buffer[8 * i + 3 + 1];\n                this._scales[3 * i + 2] = f_buffer[8 * i + 3 + 2];\n\n                data_f[8 * i + 0] = this._positions[3 * i + 0];\n                data_f[8 * i + 1] = this._positions[3 * i + 1];\n                data_f[8 * i + 2] = this._positions[3 * i + 2];\n\n                data_c[4 * (8 * i + 7) + 0] = u_buffer[32 * i + 24 + 0];\n                data_c[4 * (8 * i + 7) + 1] = u_buffer[32 * i + 24 + 1];\n                data_c[4 * (8 * i + 7) + 2] = u_buffer[32 * i + 24 + 2];\n                data_c[4 * (8 * i + 7) + 3] = u_buffer[32 * i + 24 + 3];\n\n                const rot = Matrix3.RotationFromQuaternion(\n                    new Quaternion(\n                        this._rotations[4 * i + 1],\n                        this._rotations[4 * i + 2],\n                        this._rotations[4 * i + 3],\n                        -this._rotations[4 * i + 0],\n                    ),\n                );\n\n                const scale = Matrix3.Diagonal(\n                    new Vector3(this._scales[3 * i + 0], this._scales[3 * i + 1], this._scales[3 * i + 2]),\n                );\n\n                const M = scale.multiply(rot).buffer;\n\n                const sigma = [\n                    M[0] * M[0] + M[3] * M[3] + M[6] * M[6],\n                    M[0] * M[1] + M[3] * M[4] + M[6] * M[7],\n                    M[0] * M[2] + M[3] * M[5] + M[6] * M[8],\n                    M[1] * M[1] + M[4] * M[4] + M[7] * M[7],\n                    M[1] * M[2] + M[4] * M[5] + M[7] * M[8],\n                    M[2] * M[2] + M[5] * M[5] + M[8] * M[8],\n                ];\n\n                this._data[8 * i + 4] = packHalf2x16(4 * sigma[0], 4 * sigma[1]);\n                this._data[8 * i + 5] = packHalf2x16(4 * sigma[2], 4 * sigma[3]);\n                this._data[8 * i + 6] = packHalf2x16(4 * sigma[4], 4 * sigma[5]);\n            }\n\n            this.dispatchEvent(changeEvent);\n        };\n\n        this.translate = (translation: Vector3) => {\n            const data_f = new Float32Array(this._data.buffer);\n            for (let i = 0; i < this._vertexCount; i++) {\n                this._positions[3 * i + 0] += translation.x;\n                this._positions[3 * i + 1] += translation.y;\n                this._positions[3 * i + 2] += translation.z;\n\n                data_f[8 * i + 0] = this._positions[3 * i + 0];\n                data_f[8 * i + 1] = this._positions[3 * i + 1];\n                data_f[8 * i + 2] = this._positions[3 * i + 2];\n            }\n\n            this.dispatchEvent(changeEvent);\n        };\n\n        this.rotate = (rotation: Quaternion) => {\n            const R = Matrix3.RotationFromQuaternion(rotation).buffer;\n            const data_f = new Float32Array(this._data.buffer);\n\n            for (let i = 0; i < this._vertexCount; i++) {\n                const x = this._positions[3 * i + 0];\n                const y = this._positions[3 * i + 1];\n                const z = this._positions[3 * i + 2];\n\n                this._positions[3 * i + 0] = R[0] * x + R[1] * y + R[2] * z;\n                this._positions[3 * i + 1] = R[3] * x + R[4] * y + R[5] * z;\n                this._positions[3 * i + 2] = R[6] * x + R[7] * y + R[8] * z;\n\n                data_f[8 * i + 0] = this._positions[3 * i + 0];\n                data_f[8 * i + 1] = this._positions[3 * i + 1];\n                data_f[8 * i + 2] = this._positions[3 * i + 2];\n\n                const currentRotation = new Quaternion(\n                    this._rotations[4 * i + 1],\n                    this._rotations[4 * i + 2],\n                    this._rotations[4 * i + 3],\n                    this._rotations[4 * i + 0],\n                );\n\n                const newRot = rotation.multiply(currentRotation);\n                this._rotations[4 * i + 1] = newRot.x;\n                this._rotations[4 * i + 2] = newRot.y;\n                this._rotations[4 * i + 3] = newRot.z;\n                this._rotations[4 * i + 0] = newRot.w;\n\n                const rot = Matrix3.RotationFromQuaternion(\n                    new Quaternion(\n                        this._rotations[4 * i + 1],\n                        this._rotations[4 * i + 2],\n                        this._rotations[4 * i + 3],\n                        -this._rotations[4 * i + 0],\n                    ),\n                );\n\n                const scale = Matrix3.Diagonal(\n                    new Vector3(this._scales[3 * i + 0], this._scales[3 * i + 1], this._scales[3 * i + 2]),\n                );\n\n                const M = scale.multiply(rot).buffer;\n\n                const sigma = [\n                    M[0] * M[0] + M[3] * M[3] + M[6] * M[6],\n                    M[0] * M[1] + M[3] * M[4] + M[6] * M[7],\n                    M[0] * M[2] + M[3] * M[5] + M[6] * M[8],\n                    M[1] * M[1] + M[4] * M[4] + M[7] * M[7],\n                    M[1] * M[2] + M[4] * M[5] + M[7] * M[8],\n                    M[2] * M[2] + M[5] * M[5] + M[8] * M[8],\n                ];\n\n                this._data[8 * i + 4] = packHalf2x16(4 * sigma[0], 4 * sigma[1]);\n                this._data[8 * i + 5] = packHalf2x16(4 * sigma[2], 4 * sigma[3]);\n                this._data[8 * i + 6] = packHalf2x16(4 * sigma[4], 4 * sigma[5]);\n            }\n\n            this.dispatchEvent(changeEvent);\n        };\n\n        this.scale = (scale: Vector3) => {\n            const data_f = new Float32Array(this._data.buffer);\n\n            for (let i = 0; i < this.vertexCount; i++) {\n                this._positions[3 * i + 0] *= scale.x;\n                this._positions[3 * i + 1] *= scale.y;\n                this._positions[3 * i + 2] *= scale.z;\n\n                data_f[8 * i + 0] = this._positions[3 * i + 0];\n                data_f[8 * i + 1] = this._positions[3 * i + 1];\n                data_f[8 * i + 2] = this._positions[3 * i + 2];\n\n                this._scales[3 * i + 0] *= scale.x;\n                this._scales[3 * i + 1] *= scale.y;\n                this._scales[3 * i + 2] *= scale.z;\n\n                const rot = Matrix3.RotationFromQuaternion(\n                    new Quaternion(\n                        this._rotations[4 * i + 1],\n                        this._rotations[4 * i + 2],\n                        this._rotations[4 * i + 3],\n                        -this._rotations[4 * i + 0],\n                    ),\n                );\n\n                const newScale = Matrix3.Diagonal(\n                    new Vector3(this._scales[3 * i + 0], this._scales[3 * i + 1], this._scales[3 * i + 2]),\n                );\n\n                const M = newScale.multiply(rot).buffer;\n\n                const sigma = [\n                    M[0] * M[0] + M[3] * M[3] + M[6] * M[6],\n                    M[0] * M[1] + M[3] * M[4] + M[6] * M[7],\n                    M[0] * M[2] + M[3] * M[5] + M[6] * M[8],\n                    M[1] * M[1] + M[4] * M[4] + M[7] * M[7],\n                    M[1] * M[2] + M[4] * M[5] + M[7] * M[8],\n                    M[2] * M[2] + M[5] * M[5] + M[8] * M[8],\n                ];\n\n                this._data[8 * i + 4] = packHalf2x16(4 * sigma[0], 4 * sigma[1]);\n                this._data[8 * i + 5] = packHalf2x16(4 * sigma[2], 4 * sigma[3]);\n                this._data[8 * i + 6] = packHalf2x16(4 * sigma[4], 4 * sigma[5]);\n            }\n\n            this.dispatchEvent(changeEvent);\n        };\n\n        this.limitBox = (xMin: number, xMax: number, yMin: number, yMax: number, zMin: number, zMax: number) => {\n            if (xMin >= xMax) {\n                throw new Error(`xMin (${xMin}) must be smaller than xMax (${xMax})`);\n            }\n            if (yMin >= yMax) {\n                throw new Error(`yMin (${yMin}) must be smaller than yMax (${yMax})`);\n            }\n            if (zMin >= zMax) {\n                throw new Error(`zMin (${zMin}) must be smaller than zMax (${zMax})`);\n            }\n\n            const mask = new Uint8Array(this._vertexCount);\n            for (let i = 0; i < this._vertexCount; i++) {\n                const x = this._positions[3 * i + 0];\n                const y = this._positions[3 * i + 1];\n                const z = this._positions[3 * i + 2];\n\n                if (x >= xMin && x <= xMax && y >= yMin && y <= yMax && z >= zMin && z <= zMax) {\n                    mask[i] = 1;\n                }\n            }\n\n            let newIndex = 0;\n            for (let i = 0; i < this._vertexCount; i++) {\n                if (mask[i] === 0) continue;\n\n                this._data[8 * newIndex + 0] = this._data[8 * i + 0];\n                this._data[8 * newIndex + 1] = this._data[8 * i + 1];\n                this._data[8 * newIndex + 2] = this._data[8 * i + 2];\n                this._data[8 * newIndex + 3] = this._data[8 * i + 3];\n                this._data[8 * newIndex + 4] = this._data[8 * i + 4];\n                this._data[8 * newIndex + 5] = this._data[8 * i + 5];\n                this._data[8 * newIndex + 6] = this._data[8 * i + 6];\n                this._data[8 * newIndex + 7] = this._data[8 * i + 7];\n\n                this._positions[3 * newIndex + 0] = this._positions[3 * i + 0];\n                this._positions[3 * newIndex + 1] = this._positions[3 * i + 1];\n                this._positions[3 * newIndex + 2] = this._positions[3 * i + 2];\n\n                this._rotations[4 * newIndex + 0] = this._rotations[4 * i + 0];\n                this._rotations[4 * newIndex + 1] = this._rotations[4 * i + 1];\n                this._rotations[4 * newIndex + 2] = this._rotations[4 * i + 2];\n                this._rotations[4 * newIndex + 3] = this._rotations[4 * i + 3];\n\n                this._scales[3 * newIndex + 0] = this._scales[3 * i + 0];\n                this._scales[3 * newIndex + 1] = this._scales[3 * i + 1];\n                this._scales[3 * newIndex + 2] = this._scales[3 * i + 2];\n\n                newIndex += 1;\n            }\n\n            this._height = Math.ceil((2 * newIndex) / this._width);\n            this._vertexCount = newIndex;\n            this._data = new Uint32Array(this._data.buffer, 0, this._width * this._height * 4);\n            this._positions = new Float32Array(this._positions.buffer, 0, 3 * newIndex);\n            this._rotations = new Float32Array(this._rotations.buffer, 0, 4 * newIndex);\n            this._scales = new Float32Array(this._scales.buffer, 0, 3 * newIndex);\n\n            this.dispatchEvent(changeEvent);\n        };\n\n        this.saveToFile = (name: string) => {\n            if (!document) return;\n\n            const outputData = new Uint8Array(this._vertexCount * Scene.RowLength);\n\n            const f_buffer = new Float32Array(outputData.buffer);\n            const u_buffer = new Uint8Array(outputData.buffer);\n\n            const data_c = new Uint8Array(this._data.buffer);\n\n            for (let i = 0; i < this._vertexCount; i++) {\n                f_buffer[8 * i + 0] = this._positions[3 * i + 0];\n                f_buffer[8 * i + 1] = this._positions[3 * i + 1];\n                f_buffer[8 * i + 2] = this._positions[3 * i + 2];\n\n                u_buffer[32 * i + 24 + 0] = data_c[4 * (8 * i + 7) + 0];\n                u_buffer[32 * i + 24 + 1] = data_c[4 * (8 * i + 7) + 1];\n                u_buffer[32 * i + 24 + 2] = data_c[4 * (8 * i + 7) + 2];\n                u_buffer[32 * i + 24 + 3] = data_c[4 * (8 * i + 7) + 3];\n\n                f_buffer[8 * i + 3 + 0] = this._scales[3 * i + 0];\n                f_buffer[8 * i + 3 + 1] = this._scales[3 * i + 1];\n                f_buffer[8 * i + 3 + 2] = this._scales[3 * i + 2];\n\n                u_buffer[32 * i + 28 + 0] = (this._rotations[4 * i + 0] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 1] = (this._rotations[4 * i + 1] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 2] = (this._rotations[4 * i + 2] * 128 + 128) & 0xff;\n                u_buffer[32 * i + 28 + 3] = (this._rotations[4 * i + 3] * 128 + 128) & 0xff;\n            }\n\n            const blob = new Blob([outputData.buffer], { type: \"application/octet-stream\" });\n            const link = document.createElement(\"a\");\n            link.download = name;\n            link.href = URL.createObjectURL(blob);\n            link.click();\n        };\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    get vertexCount() {\n        return this._vertexCount;\n    }\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get positions() {\n        return this._positions;\n    }\n\n    get rotations() {\n        return this._rotations;\n    }\n\n    get scales() {\n        return this._scales;\n    }\n}\n\nexport { Scene };\n","import type { Scene } from \"../core/Scene\";\n\nclass Loader {\n    static async LoadAsync(url: string, scene: Scene, onProgress?: (progress: number) => void): Promise<void> {\n        const req = await fetch(url, {\n            mode: \"cors\",\n            credentials: \"omit\",\n        });\n\n        if (req.status != 200) {\n            throw new Error(req.status + \" Unable to load \" + req.url);\n        }\n\n        const reader = req.body!.getReader();\n        const contentLength = parseInt(req.headers.get(\"content-length\") as string);\n        const data = new Uint8Array(contentLength);\n\n        let bytesRead = 0;\n\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const { done, value } = await reader.read();\n            if (done) break;\n\n            data.set(value, bytesRead);\n            bytesRead += value.length;\n\n            onProgress?.(bytesRead / contentLength);\n        }\n\n        scene.setData(data);\n    }\n\n    static async LoadFromFileAsync(file: File, scene: Scene, onProgress?: (progress: number) => void): Promise<void> {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const data = new Uint8Array(e.target!.result as ArrayBuffer);\n            scene.setData(data);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n    }\n}\n\nexport { Loader };\n","import { Scene } from \"../core/Scene\";\nimport { Vector3 } from \"../math/Vector3\";\nimport { Quaternion } from \"../math/Quaternion\";\n\nclass PLYLoader {\n    static SH_C0 = 0.28209479177387814;\n\n    static async LoadAsync(\n        url: string,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        format: string = \"\",\n    ): Promise<void> {\n        const req = await fetch(url, {\n            mode: \"cors\",\n            credentials: \"omit\",\n        });\n\n        if (req.status != 200) {\n            throw new Error(req.status + \" Unable to load \" + req.url);\n        }\n\n        const reader = req.body!.getReader();\n        const contentLength = parseInt(req.headers.get(\"content-length\") as string);\n        const plyData = new Uint8Array(contentLength);\n\n        let bytesRead = 0;\n\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const { done, value } = await reader.read();\n            if (done) break;\n\n            plyData.set(value, bytesRead);\n            bytesRead += value.length;\n\n            onProgress?.(bytesRead / contentLength);\n        }\n\n        if (plyData[0] !== 112 || plyData[1] !== 108 || plyData[2] !== 121 || plyData[3] !== 10) {\n            throw new Error(\"Invalid PLY file\");\n        }\n\n        const data = new Uint8Array(this._ParsePLYBuffer(plyData.buffer, format));\n        scene.setData(data);\n    }\n\n    static async LoadFromFileAsync(\n        file: File,\n        scene: Scene,\n        onProgress?: (progress: number) => void,\n        format: string = \"\",\n    ): Promise<void> {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const data = new Uint8Array(this._ParsePLYBuffer(e.target!.result as ArrayBuffer, format));\n            scene.setData(data);\n        };\n        reader.onprogress = (e) => {\n            onProgress?.(e.loaded / e.total);\n        };\n        reader.readAsArrayBuffer(file);\n        await new Promise<void>((resolve) => {\n            reader.onloadend = () => {\n                resolve();\n            };\n        });\n    }\n\n    private static _ParsePLYBuffer(inputBuffer: ArrayBuffer, format: string): ArrayBuffer {\n        type PlyProperty = {\n            name: string;\n            type: string;\n            offset: number;\n        };\n\n        const ubuf = new Uint8Array(inputBuffer);\n        const headerText = new TextDecoder().decode(ubuf.slice(0, 1024 * 10));\n        const header_end = \"end_header\\n\";\n        const header_end_index = headerText.indexOf(header_end);\n        if (header_end_index < 0) throw new Error(\"Unable to read .ply file header\");\n\n        const vertexCount = parseInt(/element vertex (\\d+)\\n/.exec(headerText)![1]);\n\n        let rowOffset = 0;\n        const offsets: Record<string, number> = {\n            double: 8,\n            int: 4,\n            uint: 4,\n            float: 4,\n            short: 2,\n            ushort: 2,\n            uchar: 1,\n        };\n\n        const properties: PlyProperty[] = [];\n        for (const prop of headerText\n            .slice(0, header_end_index)\n            .split(\"\\n\")\n            .filter((k) => k.startsWith(\"property \"))) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const [_p, type, name] = prop.split(\" \");\n            properties.push({ name, type, offset: rowOffset });\n            if (!offsets[type]) throw new Error(`Unsupported property type: ${type}`);\n            rowOffset += offsets[type];\n        }\n\n        const dataView = new DataView(inputBuffer, header_end_index + header_end.length);\n        const buffer = new ArrayBuffer(Scene.RowLength * vertexCount);\n\n        const q_polycam = Quaternion.FromEuler(new Vector3(Math.PI / 2, 0, 0));\n\n        for (let i = 0; i < vertexCount; i++) {\n            const position = new Float32Array(buffer, i * Scene.RowLength, 3);\n            const scale = new Float32Array(buffer, i * Scene.RowLength + 12, 3);\n            const rgba = new Uint8ClampedArray(buffer, i * Scene.RowLength + 24, 4);\n            const rot = new Uint8ClampedArray(buffer, i * Scene.RowLength + 28, 4);\n\n            let r0: number = 255;\n            let r1: number = 0;\n            let r2: number = 0;\n            let r3: number = 0;\n\n            properties.forEach((property) => {\n                let value;\n                switch (property.type) {\n                    case \"float\":\n                        value = dataView.getFloat32(property.offset + i * rowOffset, true);\n                        break;\n                    case \"int\":\n                        value = dataView.getInt32(property.offset + i * rowOffset, true);\n                        break;\n                    default:\n                        throw new Error(`Unsupported property type: ${property.type}`);\n                }\n\n                switch (property.name) {\n                    case \"x\":\n                        position[0] = value;\n                        break;\n                    case \"y\":\n                        position[1] = value;\n                        break;\n                    case \"z\":\n                        position[2] = value;\n                        break;\n                    case \"scale_0\":\n                        scale[0] = Math.exp(value);\n                        break;\n                    case \"scale_1\":\n                        scale[1] = Math.exp(value);\n                        break;\n                    case \"scale_2\":\n                        scale[2] = Math.exp(value);\n                        break;\n                    case \"red\":\n                        rgba[0] = value;\n                        break;\n                    case \"green\":\n                        rgba[1] = value;\n                        break;\n                    case \"blue\":\n                        rgba[2] = value;\n                        break;\n                    case \"f_dc_0\":\n                        rgba[0] = (0.5 + this.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_1\":\n                        rgba[1] = (0.5 + this.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_2\":\n                        rgba[2] = (0.5 + this.SH_C0 * value) * 255;\n                        break;\n                    case \"f_dc_3\":\n                        rgba[3] = (0.5 + this.SH_C0 * value) * 255;\n                        break;\n                    case \"opacity\":\n                        rgba[3] = (1 / (1 + Math.exp(-value))) * 255;\n                        break;\n                    case \"rot_0\":\n                        r0 = value;\n                        break;\n                    case \"rot_1\":\n                        r1 = value;\n                        break;\n                    case \"rot_2\":\n                        r2 = value;\n                        break;\n                    case \"rot_3\":\n                        r3 = value;\n                        break;\n                }\n            });\n\n            let q = new Quaternion(r1, r2, r3, r0);\n\n            switch (format) {\n                case \"polycam\": {\n                    const temp = position[1];\n                    position[1] = -position[2];\n                    position[2] = temp;\n                    q = q_polycam.multiply(q);\n                    break;\n                }\n                case \"\":\n                    break;\n                default:\n                    throw new Error(`Unsupported format: ${format}`);\n            }\n\n            q = q.normalize();\n            rot[0] = q.w * 128 + 128;\n            rot[1] = q.x * 128 + 128;\n            rot[2] = q.y * 128 + 128;\n            rot[3] = q.z * 128 + 128;\n        }\n\n        return buffer;\n    }\n}\n\nexport { PLYLoader };\n","import { WebGLRenderer } from \"../../WebGLRenderer\";\nimport { ShaderPass } from \"./ShaderPass\";\n\nclass FadeInPass implements ShaderPass {\n    init: (renderer: WebGLRenderer, program: WebGLProgram) => void;\n    render: () => void;\n\n    constructor(speed: number = 1.0) {\n        let value = 0.0;\n        let active = false;\n\n        let activeRenderer: WebGLRenderer;\n        let u_useDepthFade: WebGLUniformLocation;\n        let u_depthFade: WebGLUniformLocation;\n\n        this.init = (renderer: WebGLRenderer, program: WebGLProgram) => {\n            value = 0;\n            active = true;\n            activeRenderer = renderer;\n\n            u_useDepthFade = renderer.gl.getUniformLocation(program, \"u_useDepthFade\") as WebGLUniformLocation;\n            activeRenderer.gl.uniform1i(u_useDepthFade, 1);\n\n            u_depthFade = renderer.gl.getUniformLocation(program, \"u_depthFade\") as WebGLUniformLocation;\n            activeRenderer.gl.uniform1f(u_depthFade, value);\n        };\n\n        this.render = () => {\n            if (!active) return;\n            value = Math.min(value + speed * 0.01, 1.0);\n            if (value >= 1.0) {\n                active = false;\n                activeRenderer.gl.uniform1i(u_useDepthFade, 0);\n            }\n            activeRenderer.gl.uniform1f(u_depthFade, value);\n        };\n    }\n}\n\nexport { FadeInPass };\n","import type { Camera } from \"../cameras/Camera\";\nimport type { Scene } from \"../core/Scene\";\n\nimport SortWorker from \"web-worker:./webgl/utils/Worker.ts\";\n\nimport { vertex } from \"./webgl/shaders/vertex.glsl\";\nimport { frag } from \"./webgl/shaders/frag.glsl\";\nimport { ShaderPass } from \"./webgl/passes/ShaderPass\";\nimport { FadeInPass } from \"./webgl/passes/FadeInPass\";\n\nexport class WebGLRenderer {\n    domElement: HTMLCanvasElement;\n    gl: WebGL2RenderingContext;\n\n    resize: () => void;\n    setSize: (width: number, height: number) => void;\n    render: (scene: Scene, camera: Camera) => void;\n    dispose: () => void;\n\n    constructor(optionalCanvas: HTMLCanvasElement | null = null, optionalShaderPasses: ShaderPass[] | null = null) {\n        const canvas: HTMLCanvasElement = optionalCanvas || document.createElement(\"canvas\");\n        if (!optionalCanvas) {\n            canvas.style.display = \"block\";\n            canvas.style.boxSizing = \"border-box\";\n            canvas.style.width = \"100%\";\n            canvas.style.height = \"100%\";\n            canvas.style.margin = \"0\";\n            canvas.style.padding = \"0\";\n            document.body.appendChild(canvas);\n        }\n        canvas.style.background = \"#000\";\n        this.domElement = canvas;\n\n        const gl = canvas.getContext(\"webgl2\", { antialias: false }) as WebGL2RenderingContext;\n        this.gl = gl;\n\n        const shaderPasses = optionalShaderPasses || [];\n        if (!optionalShaderPasses) {\n            shaderPasses.push(new FadeInPass());\n        }\n\n        let activeScene: Scene;\n        let activeCamera: Camera;\n\n        let worker: Worker;\n\n        let vertexShader: WebGLShader;\n        let fragmentShader: WebGLShader;\n        let program: WebGLProgram;\n\n        let u_projection: WebGLUniformLocation;\n        let u_viewport: WebGLUniformLocation;\n        let u_focal: WebGLUniformLocation;\n        let u_view: WebGLUniformLocation;\n        let u_texture: WebGLUniformLocation;\n\n        let positionAttribute: number;\n        let indexAttribute: number;\n\n        let vertexBuffer: WebGLBuffer;\n        let centerBuffer: WebGLBuffer;\n        let colorBuffer: WebGLBuffer;\n        let covABuffer: WebGLBuffer;\n        let covBBuffer: WebGLBuffer;\n\n        let initialized = false;\n\n        this.resize = () => {\n            const width = canvas.clientWidth;\n            const height = canvas.clientHeight;\n            if (canvas.width !== width || canvas.height !== height) {\n                this.setSize(width, height);\n            }\n        };\n\n        this.setSize = (width: number, height: number) => {\n            canvas.width = width;\n            canvas.height = height;\n\n            if (!activeCamera) return;\n\n            gl.viewport(0, 0, canvas!.width, canvas.height);\n            activeCamera.update(canvas.width, canvas.height);\n\n            u_projection = gl.getUniformLocation(program, \"projection\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_projection, false, activeCamera.projectionMatrix.buffer);\n\n            u_viewport = gl.getUniformLocation(program, \"viewport\") as WebGLUniformLocation;\n            gl.uniform2fv(u_viewport, new Float32Array([canvas.width, canvas.height]));\n        };\n\n        const initWebGL = () => {\n            worker = new SortWorker();\n            const serializedScene = {\n                positions: activeScene.positions,\n                vertexCount: activeScene.vertexCount,\n            };\n            worker.postMessage({ scene: serializedScene });\n\n            gl.viewport(0, 0, canvas.width, canvas.height);\n\n            vertexShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\n            gl.shaderSource(vertexShader, vertex);\n            gl.compileShader(vertexShader);\n            if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n                console.error(gl.getShaderInfoLog(vertexShader));\n            }\n\n            fragmentShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\n            gl.shaderSource(fragmentShader, frag);\n            gl.compileShader(fragmentShader);\n            if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n                console.error(gl.getShaderInfoLog(fragmentShader));\n            }\n\n            program = gl.createProgram() as WebGLProgram;\n            gl.attachShader(program, vertexShader);\n            gl.attachShader(program, fragmentShader);\n            gl.linkProgram(program);\n            gl.useProgram(program);\n            if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n                console.error(gl.getProgramInfoLog(program));\n            }\n\n            gl.disable(gl.DEPTH_TEST);\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(gl.ONE_MINUS_DST_ALPHA, gl.ONE, gl.ONE_MINUS_DST_ALPHA, gl.ONE);\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n\n            activeCamera.update(canvas.width, canvas.height);\n\n            u_projection = gl.getUniformLocation(program, \"projection\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_projection, false, activeCamera.projectionMatrix.buffer);\n\n            u_viewport = gl.getUniformLocation(program, \"viewport\") as WebGLUniformLocation;\n            gl.uniform2fv(u_viewport, new Float32Array([canvas.width, canvas.height]));\n\n            u_focal = gl.getUniformLocation(program, \"focal\") as WebGLUniformLocation;\n            gl.uniform2fv(u_focal, new Float32Array([activeCamera.fx, activeCamera.fy]));\n\n            u_view = gl.getUniformLocation(program, \"view\") as WebGLUniformLocation;\n            gl.uniformMatrix4fv(u_view, false, activeCamera.viewMatrix.buffer);\n\n            const triangleVertices = new Float32Array([-2, -2, 2, -2, 2, 2, -2, 2]);\n            vertexBuffer = gl.createBuffer() as WebGLBuffer;\n            gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, triangleVertices, gl.STATIC_DRAW);\n\n            positionAttribute = gl.getAttribLocation(program, \"position\");\n            gl.enableVertexAttribArray(positionAttribute);\n            gl.vertexAttribPointer(positionAttribute, 2, gl.FLOAT, false, 0, 0);\n\n            const texture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n\n            u_texture = gl.getUniformLocation(program, \"u_texture\") as WebGLUniformLocation;\n            gl.uniform1i(u_texture, 0);\n\n            const indexBuffer = gl.createBuffer() as WebGLBuffer;\n            indexAttribute = gl.getAttribLocation(program, \"index\");\n            gl.enableVertexAttribArray(indexAttribute);\n            gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n            gl.vertexAttribIPointer(indexAttribute, 1, gl.INT, 0, 0);\n            gl.vertexAttribDivisor(indexAttribute, 1);\n\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            gl.texImage2D(\n                gl.TEXTURE_2D,\n                0,\n                gl.RGBA32UI,\n                activeScene.width,\n                activeScene.height,\n                0,\n                gl.RGBA_INTEGER,\n                gl.UNSIGNED_INT,\n                activeScene.data,\n            );\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n\n            for (const shaderPass of shaderPasses) {\n                shaderPass.init(this, program);\n            }\n\n            worker.onmessage = (e) => {\n                if (e.data.depthIndex) {\n                    const { depthIndex } = e.data;\n                    gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer);\n                    gl.bufferData(gl.ARRAY_BUFFER, depthIndex, gl.STATIC_DRAW);\n                }\n            };\n\n            initialized = true;\n        };\n\n        const onSceneChange = () => {\n            if (initialized) {\n                this.dispose();\n            }\n\n            initWebGL();\n        };\n\n        this.render = (scene: Scene, camera: Camera) => {\n            if (scene !== activeScene || camera !== activeCamera) {\n                if (initialized) {\n                    this.dispose();\n                }\n\n                activeCamera = camera;\n\n                if (scene !== activeScene) {\n                    if (activeScene) {\n                        activeScene.removeEventListener(\"change\", onSceneChange);\n                    }\n                    activeScene = scene;\n                    activeScene.addEventListener(\"change\", onSceneChange);\n                }\n\n                initWebGL();\n            }\n\n            activeCamera.update(canvas.width, canvas.height);\n            worker.postMessage({ viewProj: activeCamera.viewProj });\n\n            if (activeScene.vertexCount > 0) {\n                for (const shaderPass of shaderPasses) {\n                    shaderPass.render();\n                }\n                gl.uniformMatrix4fv(u_view, false, activeCamera.viewMatrix.buffer);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n                gl.drawArraysInstanced(gl.TRIANGLE_FAN, 0, 4, activeScene.vertexCount);\n            } else {\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        };\n\n        this.dispose = () => {\n            worker.terminate();\n\n            gl.deleteShader(vertexShader);\n            gl.deleteShader(fragmentShader);\n            gl.deleteProgram(program);\n\n            gl.deleteBuffer(vertexBuffer);\n            gl.deleteBuffer(centerBuffer);\n            gl.deleteBuffer(colorBuffer);\n            gl.deleteBuffer(covABuffer);\n            gl.deleteBuffer(covBBuffer);\n\n            initialized = false;\n        };\n\n        this.resize();\n    }\n}\n","/*\n    from https://github.com/antimatter15/splat/blob/main/main.js\n*/\n\nexport const vertex = /* glsl */ `#version 300 es\nprecision highp float;\nprecision highp int;\n\nuniform highp usampler2D u_texture;\nuniform mat4 projection, view;\nuniform vec2 focal;\nuniform vec2 viewport;\n\nuniform bool u_useDepthFade;\nuniform float u_depthFade;\n\nin vec2 position;\nin int index;\n\nout vec4 vColor;\nout vec2 vPosition;\n\nvoid main () {\n    uvec4 cen = texelFetch(u_texture, ivec2((uint(index) & 0x3ffu) << 1, uint(index) >> 10), 0);\n    vec4 cam = view * vec4(uintBitsToFloat(cen.xyz), 1);\n    vec4 pos2d = projection * cam;\n\n    float clip = 1.2 * pos2d.w;\n    if (pos2d.z < -pos2d.w || pos2d.x < -clip || pos2d.x > clip || pos2d.y < -clip || pos2d.y > clip) {\n        gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n        return;\n    }\n\n\n    uvec4 cov = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 1) | 1u, uint(index) >> 10), 0);\n    vec2 u1 = unpackHalf2x16(cov.x), u2 = unpackHalf2x16(cov.y), u3 = unpackHalf2x16(cov.z);\n    mat3 Vrk = mat3(u1.x, u1.y, u2.x, u1.y, u2.y, u3.x, u2.x, u3.x, u3.y);\n\n    mat3 J = mat3(\n        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z), \n        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z), \n        0., 0., 0.\n    );\n\n    mat3 T = transpose(mat3(view)) * J;\n    mat3 cov2d = transpose(T) * Vrk * T;\n\n    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;\n    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));\n    float lambda1 = mid + radius, lambda2 = mid - radius;\n\n    if(lambda2 < 0.0) return;\n    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));\n    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n\n    vColor = vec4((cov.w) & 0xffu, (cov.w >> 8) & 0xffu, (cov.w >> 16) & 0xffu, (cov.w >> 24) & 0xffu) / 255.0;\n    vPosition = position;\n\n    float scalingFactor = 1.0;\n\n    if(u_useDepthFade) {\n        float depthNorm = (pos2d.z / pos2d.w + 1.0) / 2.0;\n        float near = 0.1; float far = 100.0;\n        float normalizedDepth = (2.0 * near) / (far + near - depthNorm * (far - near));\n        float start = max(normalizedDepth - 0.1, 0.0);\n        float end = min(normalizedDepth + 0.1, 1.0);\n        scalingFactor = clamp((u_depthFade - start) / (end - start), 0.0, 1.0);\n    }\n\n    vec2 vCenter = vec2(pos2d) / pos2d.w;\n    gl_Position = vec4(\n        vCenter \n        + position.x * majorAxis * scalingFactor / viewport \n        + position.y * minorAxis * scalingFactor / viewport, 0.0, 1.0);\n\n}\n`;\n","/*\n    from https://github.com/antimatter15/splat/blob/main/main.js\n*/\n\nexport const frag = /* glsl */ `#version 300 es\nprecision highp float;\n\nin vec4 vColor;\nin vec2 vPosition;\n\nout vec4 fragColor;\n\nvoid main () {\n    float A = -dot(vPosition, vPosition);\n    if (A < -4.0) discard;\n    float B = exp(A) * vColor.a;\n    fragColor = vec4(B * vColor.rgb, B);\n}\n`;\n","import type { Camera } from \"../cameras/Camera\";\nimport { Matrix3 } from \"../math/Matrix3\";\nimport { Quaternion } from \"../math/Quaternion\";\nimport { Vector3 } from \"../math/Vector3\";\n\nclass OrbitControls {\n    minAngle: number = -90;\n    maxAngle: number = 90;\n    minZoom: number = 0.1;\n    maxZoom: number = 30;\n    orbitSpeed: number = 1;\n    panSpeed: number = 1;\n    zoomSpeed: number = 1;\n    dampening: number = 0.12;\n    setCameraTarget: (newTarget: Vector3) => void = () => {};\n    attach: (newCamera: Camera) => void = () => {};\n    detach: () => void = () => {};\n    update: () => void;\n    dispose: () => void;\n\n    constructor(\n        inputCamera: Camera,\n        domElement: HTMLElement,\n        alpha: number = 0.5,\n        beta: number = 0.5,\n        radius: number = 5,\n        enableKeyboardControls: boolean = true,\n        inputTarget: Vector3 = new Vector3(),\n    ) {\n        let target = inputTarget.clone();\n\n        let desiredTarget = target.clone();\n        let desiredAlpha = alpha;\n        let desiredBeta = beta;\n        let desiredRadius = radius;\n\n        let dragging = false;\n        let panning = false;\n        let lastDist = 0;\n        let lastX = 0;\n        let lastY = 0;\n\n        const keys: { [key: string]: boolean } = {};\n\n        let camera: Camera | null = null;\n        let isUpdatingCamera = false;\n\n        const onCameraChange = () => {\n            if (!camera || isUpdatingCamera) return;\n\n            const eulerRotation = camera.rotation.toEuler();\n            desiredAlpha = -eulerRotation.y;\n            desiredBeta = -eulerRotation.x;\n\n            const x = camera.position.x - desiredRadius * Math.sin(desiredAlpha) * Math.cos(desiredBeta);\n            const y = camera.position.y + desiredRadius * Math.sin(desiredBeta);\n            const z = camera.position.z + desiredRadius * Math.cos(desiredAlpha) * Math.cos(desiredBeta);\n\n            desiredTarget = new Vector3(x, y, z);\n        };\n\n        this.attach = (newCamera: Camera) => {\n            if (camera) {\n                this.detach();\n            }\n            camera = newCamera;\n            camera.addEventListener(\"change\", onCameraChange);\n        };\n\n        this.detach = () => {\n            if (!camera) return;\n\n            camera.removeEventListener(\"change\", onCameraChange);\n            camera = null;\n        };\n\n        this.attach(inputCamera);\n\n        this.setCameraTarget = (newTarget: Vector3) => {\n            if (!camera) return;\n            const dx = newTarget.x - camera.position.x;\n            const dy = newTarget.y - camera.position.y;\n            const dz = newTarget.z - camera.position.z;\n            desiredRadius = Math.sqrt(dx * dx + dy * dy + dz * dz);\n            desiredBeta = Math.atan2(dy, Math.sqrt(dx * dx + dz * dz));\n            desiredAlpha = -Math.atan2(dx, dz);\n            desiredTarget = new Vector3(newTarget.x, newTarget.y, newTarget.z);\n        };\n\n        const computeZoomNorm = () => {\n            return 0.1 + (0.9 * (desiredRadius - this.minZoom)) / (this.maxZoom - this.minZoom);\n        };\n\n        const onKeyDown = (e: KeyboardEvent) => {\n            keys[e.code] = true;\n            // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = true;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = true;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = true;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = true;\n        };\n\n        const onKeyUp = (e: KeyboardEvent) => {\n            keys[e.code] = false; // Map arrow keys to WASD keys\n            if (e.code === \"ArrowUp\") keys[\"KeyW\"] = false;\n            if (e.code === \"ArrowDown\") keys[\"KeyS\"] = false;\n            if (e.code === \"ArrowLeft\") keys[\"KeyA\"] = false;\n            if (e.code === \"ArrowRight\") keys[\"KeyD\"] = false;\n        };\n\n        const onMouseDown = (e: MouseEvent) => {\n            preventDefault(e);\n\n            dragging = true;\n            panning = e.button === 2;\n            lastX = e.clientX;\n            lastY = e.clientY;\n            window.addEventListener(\"mouseup\", onMouseUp);\n        };\n\n        const onMouseUp = (e: MouseEvent) => {\n            preventDefault(e);\n\n            dragging = false;\n            panning = false;\n            window.removeEventListener(\"mouseup\", onMouseUp);\n        };\n\n        const onMouseMove = (e: MouseEvent) => {\n            preventDefault(e);\n\n            if (!dragging || !camera) return;\n\n            const dx = e.clientX - lastX;\n            const dy = e.clientY - lastY;\n\n            if (panning) {\n                const zoomNorm = computeZoomNorm();\n                const panX = -dx * this.panSpeed * 0.01 * zoomNorm;\n                const panY = -dy * this.panSpeed * 0.01 * zoomNorm;\n                const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n                const right = new Vector3(R[0], R[3], R[6]);\n                const up = new Vector3(R[1], R[4], R[7]);\n                desiredTarget = desiredTarget.add(right.multiply(panX));\n                desiredTarget = desiredTarget.add(up.multiply(panY));\n            } else {\n                desiredAlpha -= dx * this.orbitSpeed * 0.003;\n                desiredBeta += dy * this.orbitSpeed * 0.003;\n                desiredBeta = Math.min(\n                    Math.max(desiredBeta, (this.minAngle * Math.PI) / 180),\n                    (this.maxAngle * Math.PI) / 180,\n                );\n            }\n\n            lastX = e.clientX;\n            lastY = e.clientY;\n        };\n\n        const onWheel = (e: WheelEvent) => {\n            preventDefault(e);\n\n            const zoomNorm = computeZoomNorm();\n            desiredRadius += e.deltaY * this.zoomSpeed * 0.025 * zoomNorm;\n            desiredRadius = Math.min(Math.max(desiredRadius, this.minZoom), this.maxZoom);\n        };\n\n        const onTouchStart = (e: TouchEvent) => {\n            preventDefault(e);\n\n            if (e.touches.length === 1) {\n                dragging = true;\n                panning = false;\n                lastX = e.touches[0].clientX;\n                lastY = e.touches[0].clientY;\n                lastDist = 0;\n            } else if (e.touches.length === 2) {\n                dragging = true;\n                panning = true;\n                lastX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\n                lastY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\n                const distX = e.touches[0].clientX - e.touches[1].clientX;\n                const distY = e.touches[0].clientY - e.touches[1].clientY;\n                lastDist = Math.sqrt(distX * distX + distY * distY);\n            }\n        };\n\n        const onTouchEnd = (e: TouchEvent) => {\n            preventDefault(e);\n\n            dragging = false;\n            panning = false;\n        };\n\n        const onTouchMove = (e: TouchEvent) => {\n            preventDefault(e);\n\n            if (!dragging || !camera) return;\n\n            if (panning) {\n                const zoomNorm = computeZoomNorm();\n\n                const distX = e.touches[0].clientX - e.touches[1].clientX;\n                const distY = e.touches[0].clientY - e.touches[1].clientY;\n                const dist = Math.sqrt(distX * distX + distY * distY);\n                const delta = lastDist - dist;\n                desiredRadius += delta * this.zoomSpeed * 0.1 * zoomNorm;\n                desiredRadius = Math.min(Math.max(desiredRadius, this.minZoom), this.maxZoom);\n                lastDist = dist;\n\n                const touchX = (e.touches[0].clientX + e.touches[1].clientX) / 2;\n                const touchY = (e.touches[0].clientY + e.touches[1].clientY) / 2;\n                const dx = touchX - lastX;\n                const dy = touchY - lastY;\n                const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n                const right = new Vector3(R[0], R[3], R[6]);\n                const up = new Vector3(R[1], R[4], R[7]);\n                desiredTarget = desiredTarget.add(right.multiply(-dx * this.panSpeed * 0.025 * zoomNorm));\n                desiredTarget = desiredTarget.add(up.multiply(-dy * this.panSpeed * 0.025 * zoomNorm));\n                lastX = touchX;\n                lastY = touchY;\n            } else {\n                const dx = e.touches[0].clientX - lastX;\n                const dy = e.touches[0].clientY - lastY;\n\n                desiredAlpha -= dx * this.orbitSpeed * 0.003;\n                desiredBeta += dy * this.orbitSpeed * 0.003;\n                desiredBeta = Math.min(\n                    Math.max(desiredBeta, (this.minAngle * Math.PI) / 180),\n                    (this.maxAngle * Math.PI) / 180,\n                );\n\n                lastX = e.touches[0].clientX;\n                lastY = e.touches[0].clientY;\n            }\n        };\n\n        const lerp = (a: number, b: number, t: number) => {\n            return (1 - t) * a + t * b;\n        };\n\n        this.update = () => {\n            if (!camera) return;\n\n            isUpdatingCamera = true;\n\n            alpha = lerp(alpha, desiredAlpha, this.dampening);\n            beta = lerp(beta, desiredBeta, this.dampening);\n            radius = lerp(radius, desiredRadius, this.dampening);\n            target = target.lerp(desiredTarget, this.dampening);\n\n            const x = target.x + radius * Math.sin(alpha) * Math.cos(beta);\n            const y = target.y - radius * Math.sin(beta);\n            const z = target.z - radius * Math.cos(alpha) * Math.cos(beta);\n            camera.position = new Vector3(x, y, z);\n\n            const direction = target.subtract(camera.position).normalize();\n            const rx = Math.asin(-direction.y);\n            const ry = Math.atan2(direction.x, direction.z);\n            camera.rotation = Quaternion.FromEuler(new Vector3(rx, ry, 0));\n\n            // Just spit balling here on the values\n            const moveSpeed = 0.025;\n            const rotateSpeed = 0.01;\n\n            const R = Matrix3.RotationFromQuaternion(camera.rotation).buffer;\n            const forward = new Vector3(-R[2], -R[5], -R[8]);\n            const right = new Vector3(R[0], R[3], R[6]);\n\n            if (keys[\"KeyS\"]) desiredTarget = desiredTarget.add(forward.multiply(moveSpeed));\n            if (keys[\"KeyW\"]) desiredTarget = desiredTarget.subtract(forward.multiply(moveSpeed));\n            if (keys[\"KeyA\"]) desiredTarget = desiredTarget.subtract(right.multiply(moveSpeed));\n            if (keys[\"KeyD\"]) desiredTarget = desiredTarget.add(right.multiply(moveSpeed));\n\n            // Add rotation with 'e' and 'q' for horizontal rotation\n            if (keys[\"KeyE\"]) desiredAlpha += rotateSpeed;\n            if (keys[\"KeyQ\"]) desiredAlpha -= rotateSpeed;\n\n            // Add rotation with 'r' and 'f' for vertical rotation\n            if (keys[\"KeyR\"]) desiredBeta += rotateSpeed;\n            if (keys[\"KeyF\"]) desiredBeta -= rotateSpeed;\n\n            isUpdatingCamera = false;\n        };\n\n        const preventDefault = (e: Event) => {\n            e.preventDefault();\n            e.stopPropagation();\n        };\n\n        this.dispose = () => {\n            domElement.removeEventListener(\"dragenter\", preventDefault);\n            domElement.removeEventListener(\"dragover\", preventDefault);\n            domElement.removeEventListener(\"dragleave\", preventDefault);\n            domElement.removeEventListener(\"contextmenu\", preventDefault);\n\n            domElement.removeEventListener(\"mousedown\", onMouseDown);\n            domElement.removeEventListener(\"mousemove\", onMouseMove);\n            domElement.removeEventListener(\"wheel\", onWheel);\n\n            domElement.removeEventListener(\"touchstart\", onTouchStart);\n            domElement.removeEventListener(\"touchend\", onTouchEnd);\n            domElement.removeEventListener(\"touchmove\", onTouchMove);\n\n            if (enableKeyboardControls) {\n                window.removeEventListener(\"keydown\", onKeyDown);\n                window.removeEventListener(\"keyup\", onKeyUp);\n            }\n        };\n\n        if (enableKeyboardControls) {\n            window.addEventListener(\"keydown\", onKeyDown);\n            window.addEventListener(\"keyup\", onKeyUp);\n        }\n\n        domElement.addEventListener(\"dragenter\", preventDefault);\n        domElement.addEventListener(\"dragover\", preventDefault);\n        domElement.addEventListener(\"dragleave\", preventDefault);\n        domElement.addEventListener(\"contextmenu\", preventDefault);\n\n        domElement.addEventListener(\"mousedown\", onMouseDown);\n        domElement.addEventListener(\"mousemove\", onMouseMove);\n        domElement.addEventListener(\"wheel\", onWheel);\n\n        domElement.addEventListener(\"touchstart\", onTouchStart);\n        domElement.addEventListener(\"touchend\", onTouchEnd);\n        domElement.addEventListener(\"touchmove\", onTouchMove);\n\n        this.update();\n    }\n}\n\nexport { OrbitControls };\n","import { WebGLRenderer } from \"../../WebGLRenderer\";\n\nclass ShaderPass {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    init(renderer: WebGLRenderer, program: WebGLProgram) {}\n\n    render() {}\n}\n\nexport { ShaderPass };\n"],"names":["Vector3","constructor","x","y","z","this","equals","v","add","subtract","multiply","lerp","t","length","Math","sqrt","distanceTo","normalize","flat","clone","Quaternion","w","q","l","w1","x1","y1","z1","w2","x2","y2","z2","FromEuler","e","halfX","halfY","halfZ","cy","cos","sy","sin","cp","sp","cz","sz","toEuler","sinr_cosp","cosr_cosp","atan2","sinp","abs","sign","PI","asin","siny_cosp","cosy_cosp","FromMatrix3","matrix","m","buffer","trace","s","EventDispatcher","listeners","Map","addEventListener","type","listener","has","set","Set","get","removeEventListener","delete","hasEventListener","dispatchEvent","event","Object3D","super","_position","_rotation","_changeEvent","position","rotation","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","i","a","b","Eye","Diagonal","RotationFromQuaternion","RotationFromEuler","cx","sx","Matrix4","n14","n24","n34","n41","n42","n43","n44","Camera","fx","fy","near","far","getViewMatrix","R","camToWorld","projectionMatrix","viewMatrix","viewProj","update","width","height","Scene","_floatView","Float32Array","_int32View","Int32Array","floatToHalf","float","f","exp","newExp","frac","packHalf2x16","changeEvent","_data","Uint32Array","_vertexCount","_width","_height","_positions","_rotations","_scales","setData","data","RowLength","ceil","f_buffer","u_buffer","Uint8Array","data_c","data_f","rot","M","sigma","translate","translation","rotate","currentRotation","newRot","scale","vertexCount","limitBox","xMin","xMax","yMin","yMax","zMin","zMax","Error","mask","newIndex","saveToFile","name","document","outputData","blob","Blob","link","createElement","download","href","URL","createObjectURL","click","positions","rotations","scales","Loader","LoadAsync","url","scene","onProgress","req","fetch","mode","credentials","status","reader","body","getReader","contentLength","parseInt","headers","bytesRead","done","value","read","LoadFromFileAsync","file","FileReader","onload","target","result","onprogress","loaded","total","readAsArrayBuffer","Promise","resolve","onloadend","PLYLoader","format","plyData","_ParsePLYBuffer","inputBuffer","ubuf","headerText","TextDecoder","decode","slice","header_end","header_end_index","indexOf","exec","rowOffset","offsets","double","int","uint","short","ushort","uchar","properties","prop","split","filter","k","startsWith","_p","push","offset","dataView","DataView","ArrayBuffer","q_polycam","rgba","Uint8ClampedArray","r0","r1","r2","r3","forEach","property","getFloat32","getInt32","SH_C0","temp","FadeInPass","speed","activeRenderer","u_useDepthFade","u_depthFade","active","init","renderer","program","gl","getUniformLocation","uniform1i","uniform1f","render","min","WebGLRenderer","optionalCanvas","optionalShaderPasses","canvas","style","display","boxSizing","margin","padding","appendChild","background","domElement","getContext","antialias","shaderPasses","activeScene","activeCamera","worker","vertexShader","fragmentShader","u_projection","u_viewport","u_focal","u_view","u_texture","positionAttribute","indexAttribute","vertexBuffer","initialized","resize","clientWidth","clientHeight","setSize","viewport","uniformMatrix4fv","uniform2fv","initWebGL","SortWorker","serializedScene","postMessage","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","useProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","disable","DEPTH_TEST","enable","BLEND","blendFuncSeparate","ONE_MINUS_DST_ALPHA","ONE","blendEquationSeparate","FUNC_ADD","triangleVertices","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","texture","createTexture","bindTexture","TEXTURE_2D","indexBuffer","vertexAttribIPointer","INT","vertexAttribDivisor","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA32UI","RGBA_INTEGER","UNSIGNED_INT","activeTexture","TEXTURE0","shaderPass","onmessage","depthIndex","onSceneChange","dispose","camera","clear","COLOR_BUFFER_BIT","drawArraysInstanced","TRIANGLE_FAN","terminate","deleteShader","deleteProgram","deleteBuffer","centerBuffer","colorBuffer","covABuffer","covBBuffer","OrbitControls","inputCamera","alpha","beta","radius","enableKeyboardControls","inputTarget","minAngle","maxAngle","minZoom","maxZoom","orbitSpeed","panSpeed","zoomSpeed","dampening","setCameraTarget","attach","detach","desiredTarget","desiredAlpha","desiredBeta","desiredRadius","dragging","panning","lastDist","lastX","lastY","keys","isUpdatingCamera","onCameraChange","eulerRotation","newCamera","newTarget","dx","dy","dz","computeZoomNorm","onKeyDown","code","onKeyUp","onMouseDown","preventDefault","button","clientX","clientY","window","onMouseUp","onMouseMove","zoomNorm","panX","panY","right","up","max","onWheel","deltaY","onTouchStart","touches","distX","distY","onTouchEnd","onTouchMove","dist","touchX","touchY","direction","rx","ry","moveSpeed","rotateSpeed","forward","stopPropagation","ShaderPass"],"mappings":"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"}